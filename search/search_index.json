{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"definitions/","text":"Definitions \u00b6 This page tries to explain as much of the theming jargon as possible. Word List \u00b6 SZS \u00b6 An archive. In the Switch's menu files it contains the layout files, animations and textures. More Info Applet \u00b6 A kind of title/app/game. Qlaunch , playerSelect , photoViewer are all applets. More Examples nxtheme \u00b6 Unfortunately SZS files from the Switch's firmware files contain copyrighted data and can't be shared online. In order to still share custom themes, the nxtheme format was developed. An nxtheme file contains theme details (name, author), images and the layout. exelixbg \u00b6 The exelixbg is the name of the panel that is added to the menus when injecting an image into __Combined.bntx file in SZS files. Diffing, Diffed JSON, Layout JSON \u00b6 A layout is created by comparing a modified SZS file with the original unmodified one. The changes that are detected are saved in a layout json file, which then only contains differential data. This way, sharing nxthemes is completely legal. Panes \u00b6 Another name for elements in bflyt files. For example P_Pict , N_Button . usd section \u00b6 usd (officially called 'extended user information') is a part of the bflyt file that holds extra data and define, for example, shadows, radius, etc. Panes are often followed by these usd sections. More Info Sysupdate \u00b6 Short for system update","title":"Definitions"},{"location":"definitions/#definitions","text":"This page tries to explain as much of the theming jargon as possible.","title":"Definitions"},{"location":"definitions/#word-list","text":"","title":"Word List"},{"location":"definitions/#szs","text":"An archive. In the Switch's menu files it contains the layout files, animations and textures. More Info","title":"SZS"},{"location":"definitions/#applet","text":"A kind of title/app/game. Qlaunch , playerSelect , photoViewer are all applets. More Examples","title":"Applet"},{"location":"definitions/#nxtheme","text":"Unfortunately SZS files from the Switch's firmware files contain copyrighted data and can't be shared online. In order to still share custom themes, the nxtheme format was developed. An nxtheme file contains theme details (name, author), images and the layout.","title":"nxtheme"},{"location":"definitions/#exelixbg","text":"The exelixbg is the name of the panel that is added to the menus when injecting an image into __Combined.bntx file in SZS files.","title":"exelixbg"},{"location":"definitions/#diffing-diffed-json-layout-json","text":"A layout is created by comparing a modified SZS file with the original unmodified one. The changes that are detected are saved in a layout json file, which then only contains differential data. This way, sharing nxthemes is completely legal.","title":"Diffing, Diffed JSON, Layout JSON"},{"location":"definitions/#panes","text":"Another name for elements in bflyt files. For example P_Pict , N_Button .","title":"Panes"},{"location":"definitions/#usd-section","text":"usd (officially called 'extended user information') is a part of the bflyt file that holds extra data and define, for example, shadows, radius, etc. Panes are often followed by these usd sections. More Info","title":"usd section"},{"location":"definitions/#sysupdate","text":"Short for system update","title":"Sysupdate"},{"location":"extras/discord-servers/","text":"Discord Servers \u00b6 This is a list of Switch-related Discord servers. Servers \u00b6 ThemezerNX","title":"Discord Servers"},{"location":"extras/discord-servers/#discord-servers","text":"This is a list of Switch-related Discord servers.","title":"Discord Servers"},{"location":"extras/discord-servers/#servers","text":"ThemezerNX","title":"Servers"},{"location":"extras/guides/","text":"Other Switch-related Guides \u00b6 The Ultimate Noob Guide for Hacking your Nintendo Switch (and Wii U) From stock to Atmosphere . A guide collaboration between Nintendo Homebrew's Helpers and Staff. ( mirror ) A translation guide for the Switch's system menus","title":"Guides"},{"location":"extras/guides/#other-switch-related-guides","text":"The Ultimate Noob Guide for Hacking your Nintendo Switch (and Wii U) From stock to Atmosphere . A guide collaboration between Nintendo Homebrew's Helpers and Staff. ( mirror ) A translation guide for the Switch's system menus","title":"Other Switch-related Guides"},{"location":"extras/tools/","text":"Tools \u00b6 Here are some tools that might be useful for theming and other types of modding. Info Some of these tools are used in LayoutKit. Those that are, are marked with . Theming Tools \u00b6 Switch-Toolbox Supported filetypes: See this list The Switch Toolbox can open and modify many file formats you might encounter when, for example, modding games. This is a visual editor. It also has support for the Switch's menu files and can often even preview them! SwitchLayoutEditor Supported filetypes: blfyt , bflan The Switch Layout Editor was specially developed for creating custom layouts. This is a visual editor. A basic introduction to the tool is available here . 3DSKit Supported filetypes: See this list 3DSKit can convert many Nintendo formats to more common file formats and vice versa. A few output types are: audio files, images, json, and txt. You need a text editor to modify the output. SARC-Tool Supported filetypes: sarc , arc , szs A tool for extracting and packing SARC/SZS files. Makes use of SarcLib and libyaz0. BNTX-Extractor Supported filetypes: bntx Extracts textures from the Binary NX Texture ('BNTX' / .bntx file extension) format used in Switch games, and saves them as DDS. BNTX-Editor Supported filetypes: bntx A tool for editing Binary Resources Texture (BNTX) files. Switch Theme Injector Switch Theme Injector (Windows app): An app to create and edit custom themes. Switch Theme Injector Online (also called WebInjector): A port of the windows injector as a web app, however, it lacks some features like custom icons and common.szs support. NXThemes Installer: An homebrew app that runs on the switch itself and can be used to install and manage themes. Other Tools \u00b6 Kuriimu A general purpose game translation toolkit for authors of fan translations. This tool also works for the Switch's menus. Here's an example of a fan-translation in Polish.","title":"Tools"},{"location":"extras/tools/#tools","text":"Here are some tools that might be useful for theming and other types of modding. Info Some of these tools are used in LayoutKit. Those that are, are marked with .","title":"Tools"},{"location":"extras/tools/#theming-tools","text":"Switch-Toolbox Supported filetypes: See this list The Switch Toolbox can open and modify many file formats you might encounter when, for example, modding games. This is a visual editor. It also has support for the Switch's menu files and can often even preview them! SwitchLayoutEditor Supported filetypes: blfyt , bflan The Switch Layout Editor was specially developed for creating custom layouts. This is a visual editor. A basic introduction to the tool is available here . 3DSKit Supported filetypes: See this list 3DSKit can convert many Nintendo formats to more common file formats and vice versa. A few output types are: audio files, images, json, and txt. You need a text editor to modify the output. SARC-Tool Supported filetypes: sarc , arc , szs A tool for extracting and packing SARC/SZS files. Makes use of SarcLib and libyaz0. BNTX-Extractor Supported filetypes: bntx Extracts textures from the Binary NX Texture ('BNTX' / .bntx file extension) format used in Switch games, and saves them as DDS. BNTX-Editor Supported filetypes: bntx A tool for editing Binary Resources Texture (BNTX) files. Switch Theme Injector Switch Theme Injector (Windows app): An app to create and edit custom themes. Switch Theme Injector Online (also called WebInjector): A port of the windows injector as a web app, however, it lacks some features like custom icons and common.szs support. NXThemes Installer: An homebrew app that runs on the switch itself and can be used to install and manage themes.","title":"Theming Tools"},{"location":"extras/tools/#other-tools","text":"Kuriimu A general purpose game translation toolkit for authors of fan translations. This tool also works for the Switch's menus. Here's an example of a fan-translation in Polish.","title":"Other Tools"},{"location":"guide/","text":"Introduction \u00b6 Getting Started \u00b6 For this guide it is expected that you already have basic knowledge on how to install themes. If you don't, it is recommended to read this page to at least get a basic idea of what you're getting yourself into ;P What You'll Need \u00b6 A hacked Switch A computer The NXThemes Installer LayoutKit LayoutKit requires a Windows installation. While this guide might refer to LayoutKit, everything should be doable without it. sys-ftpd with reboot support Info LayoutKit comes packed with the most-used tools. If you are unable to or don't want to use LayoutKit, see this list of other tools . Initial Setup \u00b6 Make sure the NXThemes Installer is working and you're running version \u22652.6.2. Open the NXThemes Installer at least once so that the menus are extracted. Copy the SD://themes/systemData folder to your computer. Download and install LayoutKit. Copy the contents of the sys-ftpd archive to the root of your MicroxSD. Continue to Menu Files \u00b6","title":"Introduction"},{"location":"guide/#introduction","text":"","title":"Introduction"},{"location":"guide/#getting-started","text":"For this guide it is expected that you already have basic knowledge on how to install themes. If you don't, it is recommended to read this page to at least get a basic idea of what you're getting yourself into ;P","title":"Getting Started"},{"location":"guide/#what-youll-need","text":"A hacked Switch A computer The NXThemes Installer LayoutKit LayoutKit requires a Windows installation. While this guide might refer to LayoutKit, everything should be doable without it. sys-ftpd with reboot support Info LayoutKit comes packed with the most-used tools. If you are unable to or don't want to use LayoutKit, see this list of other tools .","title":"What You'll Need"},{"location":"guide/#initial-setup","text":"Make sure the NXThemes Installer is working and you're running version \u22652.6.2. Open the NXThemes Installer at least once so that the menus are extracted. Copy the SD://themes/systemData folder to your computer. Download and install LayoutKit. Copy the contents of the sys-ftpd archive to the root of your MicroxSD.","title":"Initial Setup"},{"location":"guide/#continue-to-menu-files","text":"","title":"Continue to Menu Files "},{"location":"guide/animations/","text":"Back to Layouts \u00b6 Animations \u00b6 TODO Explain how groups work give an example how to create a new group Show how to create new animations using layouteditor/toolbox Continue to Examples \u00b6","title":"Animations"},{"location":"guide/animations/#animations","text":"TODO Explain how groups work give an example how to create a new group Show how to create new animations using layouteditor/toolbox","title":"Animations"},{"location":"guide/animations/#continue-to-examples","text":"","title":"Continue to Examples "},{"location":"guide/filetypes/","text":"Back to Menu Files \u00b6 Filetypes \u00b6 This page contains a list of all filetypes related to custom layouts and theming. SZS Files \u00b6 SZS files are archives with a custom compression algorithm. They are actually SARC (aka ARC ) files. The compression algorithm that is used is Yaz0. Structure \u00b6 The structure of an SZS file is generally the same: \ud83d\udce6ResidentMenu_11.0.1_original \u2523 \ud83d\udcc2anim \u2503 \u2517 \ud83d\udcdc[filename].bflan \u2523 \ud83d\udcc2bgsh \u2503 \u2523 \ud83d\udcdc__ArchiveShader.bnsh \u2503 \u2517 \ud83d\udcdc__ArchiveShader.bushvt \u2523 \ud83d\udcc2blyt \u2503 \u2517 \ud83d\udcdc[filename].bflyt \u2517 \ud83d\udcc2timg \u2517 \ud83d\udcdc__Combined.bntx The folders contain the following: anim : Animation files ( .bflan ) bgsh : GPU shaders ( .bnsh , .bushvt ) blyt : Layout files ( .bflyt ) timg : Menu images ( .bntx ) For custom layouts we only touch the files in anim and blyt . However, it is interesting to note that the NXTheme Installer internally injects the nxtheme background image in the __Combined.bntx file. bflan Files \u00b6 bflan files, or ' B inary ca F e L ayout AN imation' files, bflyt Files \u00b6 bflyt files, or ' B inary ca F e L a Y ou T ' files, Continue to Layouts \u00b6","title":"Filetypes"},{"location":"guide/filetypes/#filetypes","text":"This page contains a list of all filetypes related to custom layouts and theming.","title":"Filetypes"},{"location":"guide/filetypes/#szs-files","text":"SZS files are archives with a custom compression algorithm. They are actually SARC (aka ARC ) files. The compression algorithm that is used is Yaz0.","title":"SZS Files"},{"location":"guide/filetypes/#structure","text":"The structure of an SZS file is generally the same: \ud83d\udce6ResidentMenu_11.0.1_original \u2523 \ud83d\udcc2anim \u2503 \u2517 \ud83d\udcdc[filename].bflan \u2523 \ud83d\udcc2bgsh \u2503 \u2523 \ud83d\udcdc__ArchiveShader.bnsh \u2503 \u2517 \ud83d\udcdc__ArchiveShader.bushvt \u2523 \ud83d\udcc2blyt \u2503 \u2517 \ud83d\udcdc[filename].bflyt \u2517 \ud83d\udcc2timg \u2517 \ud83d\udcdc__Combined.bntx The folders contain the following: anim : Animation files ( .bflan ) bgsh : GPU shaders ( .bnsh , .bushvt ) blyt : Layout files ( .bflyt ) timg : Menu images ( .bntx ) For custom layouts we only touch the files in anim and blyt . However, it is interesting to note that the NXTheme Installer internally injects the nxtheme background image in the __Combined.bntx file.","title":"Structure"},{"location":"guide/filetypes/#bflan-files","text":"bflan files, or ' B inary ca F e L ayout AN imation' files,","title":"bflan Files"},{"location":"guide/filetypes/#bflyt-files","text":"bflyt files, or ' B inary ca F e L a Y ou T ' files,","title":"bflyt Files"},{"location":"guide/filetypes/#continue-to-layouts","text":"","title":"Continue to Layouts "},{"location":"guide/layouts/","text":"Back to Filetypes \u00b6 Layouts \u00b6 Continue to Animations \u00b6","title":"Layouts"},{"location":"guide/layouts/#layouts","text":"","title":"Layouts"},{"location":"guide/layouts/#continue-to-animations","text":"","title":"Continue to Animations "},{"location":"guide/menu-files/","text":"Back to Introduction \u00b6 Menu Files \u00b6 The Switch's menus can be found in multiple firmware files. Separated into multiple applets . The following table shows which menus (supported in themes) can be found where: Applet CodeName TitleID Menus qlaunch 0100000000001000 Home Menu, Lockscreen, All Apps, News, Settings playerSelect 0100000000001007 Player Select myPage 0100000000001013 User Page Almost all menu-related applets also have a common.szs file that defines structures that should be used throughout all menus in the applet. They often contain the bottom bar (controller status, buttons). Filenames \u00b6 Every menu has its own file. Here is a list of the supported menus and their filenames: Menu Filename Home Menu ResidentMenu.szs Lockscreen Entrance.szs All Apps Flaunch.szs News Notification.szs Settings Set.szs Player Select Psl.szs User Page MyPage.szs Continue to Filetypes \u00b6","title":"Menu Files"},{"location":"guide/menu-files/#menu-files","text":"The Switch's menus can be found in multiple firmware files. Separated into multiple applets . The following table shows which menus (supported in themes) can be found where: Applet CodeName TitleID Menus qlaunch 0100000000001000 Home Menu, Lockscreen, All Apps, News, Settings playerSelect 0100000000001007 Player Select myPage 0100000000001013 User Page Almost all menu-related applets also have a common.szs file that defines structures that should be used throughout all menus in the applet. They often contain the bottom bar (controller status, buttons).","title":"Menu Files"},{"location":"guide/menu-files/#filenames","text":"Every menu has its own file. Here is a list of the supported menus and their filenames: Menu Filename Home Menu ResidentMenu.szs Lockscreen Entrance.szs All Apps Flaunch.szs News Notification.szs Settings Set.szs Player Select Psl.szs User Page MyPage.szs","title":"Filenames"},{"location":"guide/menu-files/#continue-to-filetypes","text":"","title":"Continue to Filetypes "},{"location":"guide/examples/","text":"Possible Modifications \u00b6 This part of the guide contains examples and instructions how to do specific things. The list can be seen on the left. Note Examples may be incomplete Examples may be outdated Important The examples might give pieces of JSON that you can use. This JSON refers to the diffed json generated by the SwitchThemeInjector or SwitchLayoutEditor unless stated otherwise . It does not refer to json generated by 3DSKit by default .","title":"Getting Started"},{"location":"guide/examples/#possible-modifications","text":"This part of the guide contains examples and instructions how to do specific things. The list can be seen on the left. Note Examples may be incomplete Examples may be outdated Important The examples might give pieces of JSON that you can use. This JSON refers to the diffed json generated by the SwitchThemeInjector or SwitchLayoutEditor unless stated otherwise . It does not refer to json generated by 3DSKit by default .","title":"Possible Modifications"},{"location":"guide/examples/changing-component-sizes/","text":"Changing the Size of Components \u00b6 TODO","title":"Changing Component Sizes"},{"location":"guide/examples/changing-component-sizes/#changing-the-size-of-components","text":"TODO","title":"Changing the Size of Components"},{"location":"guide/examples/custom-element-colours/","text":"Custom Element Colors Example \u00b6 Modifying the colours of for example buttons, text, lines icons is possible. A theme that makes use of this functionality is Blue by Mazu/Maximum . Any colour is supported and the idea is the same in every menu. Example Code \u00b6 { \"FileName\" : \"blyt/RdtBtnSet.bflyt\" , \"Patches\" : [ { \"PaneName\" : \"P_PictBase\" , \"Visible\" : false }, { \"PaneName\" : \"L_Balloon\" , \"Visible\" : false }, { \"PaneName\" : \"P_Pict\" , \"UsdPatches\" : [ { \"PropName\" : \"C_W\" , \"PropValues\" : [ \"0\" , \"0\" , \"0\" , \"0\" ], \"type\" : 1 } ], \"ColorTL\" : \"FFF2C100\" , \"ColorTR\" : \"FFF2C100\" , \"ColorBL\" : \"FFF2C100\" , \"ColorBR\" : \"FFF2C100\" } ], \"Materials\" : [ { \"MaterialName\" : \"P_Pict\" , \"BackgroundColor\" : \"FFFFFFFF\" } ] } These main menu elements need to be changed in the common.szs , which is applied as a patch in Theme Injector. Footer (Bottom Line) - blyt/LineFooter.bflyt Footer (?) - blyt/FooterAll.bflyt Controller/Switch Icon - blyt/FooterCtrl.bflyt Start/A/Options/+ - blyt/FooterBtn.bflyt Info Since the color format is actually AABBGGRR you'll have to swap the red and blue values to get the right color. For example, the hex color code C02BE1 would become FFE12BC0 . It is currently unknown how exactly to change the cursor's default blue pulse color, but P_Grow and P_Main in Cursor3.bflyt contain colour codes. Changing these will change the secondary pulse color. The primary pulse colour is probabily a combination of these panes and their usd sections . To hide the default circle around the menu icon: { \"PaneName\" : \"L_Balloon\" , \"Visible\" : false }, Credits to Mazu/Maxim and Exelix","title":"Custom Element Colours"},{"location":"guide/examples/custom-element-colours/#custom-element-colors-example","text":"Modifying the colours of for example buttons, text, lines icons is possible. A theme that makes use of this functionality is Blue by Mazu/Maximum . Any colour is supported and the idea is the same in every menu.","title":"Custom Element Colors Example"},{"location":"guide/examples/custom-element-colours/#example-code","text":"{ \"FileName\" : \"blyt/RdtBtnSet.bflyt\" , \"Patches\" : [ { \"PaneName\" : \"P_PictBase\" , \"Visible\" : false }, { \"PaneName\" : \"L_Balloon\" , \"Visible\" : false }, { \"PaneName\" : \"P_Pict\" , \"UsdPatches\" : [ { \"PropName\" : \"C_W\" , \"PropValues\" : [ \"0\" , \"0\" , \"0\" , \"0\" ], \"type\" : 1 } ], \"ColorTL\" : \"FFF2C100\" , \"ColorTR\" : \"FFF2C100\" , \"ColorBL\" : \"FFF2C100\" , \"ColorBR\" : \"FFF2C100\" } ], \"Materials\" : [ { \"MaterialName\" : \"P_Pict\" , \"BackgroundColor\" : \"FFFFFFFF\" } ] } These main menu elements need to be changed in the common.szs , which is applied as a patch in Theme Injector. Footer (Bottom Line) - blyt/LineFooter.bflyt Footer (?) - blyt/FooterAll.bflyt Controller/Switch Icon - blyt/FooterCtrl.bflyt Start/A/Options/+ - blyt/FooterBtn.bflyt Info Since the color format is actually AABBGGRR you'll have to swap the red and blue values to get the right color. For example, the hex color code C02BE1 would become FFE12BC0 . It is currently unknown how exactly to change the cursor's default blue pulse color, but P_Grow and P_Main in Cursor3.bflyt contain colour codes. Changing these will change the secondary pulse color. The primary pulse colour is probabily a combination of these panes and their usd sections . To hide the default circle around the menu icon: { \"PaneName\" : \"L_Balloon\" , \"Visible\" : false }, Credits to Mazu/Maxim and Exelix","title":"Example Code"},{"location":"guide/examples/reposition-gamerow/","text":"Repositioning and Scaling the Gamerow \u00b6 TODO Moving the first icon before x=127 (right?) may cause the cursor to get stuck.","title":"Repositioning the Gamerow"},{"location":"guide/examples/reposition-gamerow/#repositioning-and-scaling-the-gamerow","text":"TODO Moving the first icon before x=127 (right?) may cause the cursor to get stuck.","title":"Repositioning and Scaling the Gamerow"},{"location":"guide/examples/stationary-game-icons/","text":"Stationary Game Icons \u00b6 Examples of layouts that show what stationary game icons look like are Doge Layout and Two Row layout . Info If you don't actually want to make the icons stationary, but want to move the gamerow, see Repositioning and Scaling the Gamerow . Firmware \u22658.x \u00b6 Ever since 8.0 came out, stationary game icons have been a bit of a mess to get working properly. This is because 8.0 introduced looped scrolling in the home menu. Another factor was that some behaviour regarding hitboxes was changed. In order to get stationary icons to function properly from this version onwards, the following steps should be followed: RdtBtnIconGame.bflyt \u00b6 Set the x,y scale of RootPane to a custom value. Remember this value and let's call it p . Set the x,y scale of B_Hit to 1.0/p Set the width,height of B_Hit to 256*p . 256 is the default value for width and height, but it might get changed in a future version. RdtBase.bflyt \u00b6 Set the width of N_ScrollWindow to 100000.0 Set the x,y coordinates of N_GameRoot to coordinate where you want your first game icon to be. Set the x scale of N_GameRoot to 0.00001 Set the x coordinate of N_Game to 0.0 (!) Set the x scale of N_Game to 100000.0 Set the x,y coordinate of N_Icon_00 to 0.0 Set the x,y coordinate of N_Icon_[01-11] to the positions you want. Move icons that you don't want to be shown to (1;9999) . If I remember correctly, the scale p has an influence on this. Set the x,y scale of L_BtnFlc to p . Change the y scale of N_ScrollArea and N_ScrollWindow to increase the size of the touch area. You will notice that some icons cannot be tapped if you haven't configured this correctly. Optionally change the y coordinate Warning Even slightly deviating from the values above might cause the cursor not being able to reach the icon, or not being able to tap the icon using the touch screen. However, if you find that these values do not work in your case, the only option would be to mess around with the positions of the panes (not the scale). Firmware <8.x \u00b6 On firware version 7.x and lower, it is fairly easy to move the game icons around. In order to make them stationary do the following: Change the X,Y scale of RootPane in RdtBtnIconGame.bflyt to your likings Change the X scale of N_Game in RdtBase.bflyt to 100000.0 Reposition the game icons N_Icon_XX in RdtBase.bflyt to your likings Credits to Migush","title":"Stationary Game Icons"},{"location":"guide/examples/stationary-game-icons/#stationary-game-icons","text":"Examples of layouts that show what stationary game icons look like are Doge Layout and Two Row layout . Info If you don't actually want to make the icons stationary, but want to move the gamerow, see Repositioning and Scaling the Gamerow .","title":"Stationary Game Icons"},{"location":"guide/examples/stationary-game-icons/#firmware-8x","text":"Ever since 8.0 came out, stationary game icons have been a bit of a mess to get working properly. This is because 8.0 introduced looped scrolling in the home menu. Another factor was that some behaviour regarding hitboxes was changed. In order to get stationary icons to function properly from this version onwards, the following steps should be followed:","title":"Firmware \u22658.x"},{"location":"guide/examples/stationary-game-icons/#rdtbtnicongamebflyt","text":"Set the x,y scale of RootPane to a custom value. Remember this value and let's call it p . Set the x,y scale of B_Hit to 1.0/p Set the width,height of B_Hit to 256*p . 256 is the default value for width and height, but it might get changed in a future version.","title":"RdtBtnIconGame.bflyt"},{"location":"guide/examples/stationary-game-icons/#rdtbasebflyt","text":"Set the width of N_ScrollWindow to 100000.0 Set the x,y coordinates of N_GameRoot to coordinate where you want your first game icon to be. Set the x scale of N_GameRoot to 0.00001 Set the x coordinate of N_Game to 0.0 (!) Set the x scale of N_Game to 100000.0 Set the x,y coordinate of N_Icon_00 to 0.0 Set the x,y coordinate of N_Icon_[01-11] to the positions you want. Move icons that you don't want to be shown to (1;9999) . If I remember correctly, the scale p has an influence on this. Set the x,y scale of L_BtnFlc to p . Change the y scale of N_ScrollArea and N_ScrollWindow to increase the size of the touch area. You will notice that some icons cannot be tapped if you haven't configured this correctly. Optionally change the y coordinate Warning Even slightly deviating from the values above might cause the cursor not being able to reach the icon, or not being able to tap the icon using the touch screen. However, if you find that these values do not work in your case, the only option would be to mess around with the positions of the panes (not the scale).","title":"RdtBase.bflyt"},{"location":"guide/examples/stationary-game-icons/#firmware-8x_1","text":"On firware version 7.x and lower, it is fairly easy to move the game icons around. In order to make them stationary do the following: Change the X,Y scale of RootPane in RdtBtnIconGame.bflyt to your likings Change the X scale of N_Game in RdtBase.bflyt to 100000.0 Reposition the game icons N_Icon_XX in RdtBase.bflyt to your likings Credits to Migush","title":"Firmware &lt;8.x"},{"location":"menu-docs/","text":"","title":"Introduction"},{"location":"menu-docs/list-of-parts/","text":"List of Parts \u00b6 In order to get started, it is essential to know where you can find specific parts of the menus. This page lists many known components, but there also some yet undocumented. Feel free to contribute to this repository to help complete this list. Home Menu \u00b6 File: ResidentMenu.szs Main bflyt file: RdtBase.bflyt Cursor: blyt/Cursor3.bflyt App Name Balloon: blyt/RdtBalloon.bflyt Time (Numbers): blyt/GTNumL.bflyt and Time (AM, PM, Colon): blyt/HudTime.bflyt Wifi Signal: blyt/HudSignal.bflyt Battery (Icon): blyt/BatteryConsole.bflyt Battery (Percent): blyt/HudBatteryNum.bflyt Full Launcher (All Apps): blyt/RdtBtnFullLauncher.bflyt","title":"List of Parts"},{"location":"menu-docs/list-of-parts/#list-of-parts","text":"In order to get started, it is essential to know where you can find specific parts of the menus. This page lists many known components, but there also some yet undocumented. Feel free to contribute to this repository to help complete this list.","title":"List of Parts"},{"location":"menu-docs/list-of-parts/#home-menu","text":"File: ResidentMenu.szs Main bflyt file: RdtBase.bflyt Cursor: blyt/Cursor3.bflyt App Name Balloon: blyt/RdtBalloon.bflyt Time (Numbers): blyt/GTNumL.bflyt and Time (AM, PM, Colon): blyt/HudTime.bflyt Wifi Signal: blyt/HudSignal.bflyt Battery (Icon): blyt/BatteryConsole.bflyt Battery (Percent): blyt/HudBatteryNum.bflyt Full Launcher (All Apps): blyt/RdtBtnFullLauncher.bflyt","title":"Home Menu"},{"location":"menu-docs/menus/ResidentMenu/","text":"Home Menu \u00b6 File: ResidentMenu.szs Main bflyt file: RdtBase.bflyt General Parts in This Menu \u00b6 Cursor: Cursor3.bflyt App Name Balloon: RdtBalloon.bflyt Time (Numbers): GTNumL.bflyt and GTNumM.bflyt Time (AM, PM, Colon): HudTime.bflyt Wifi Signal: HudSignal.bflyt Battery (Icon): BatteryConsole.bflyt Battery (Percent): HudBatteryNum.bflyt Full Launcher (All Apps): RdtBtnFullLauncher.bflyt Tree \u00b6 RdtBase.bflyt L_BgNml : contains the original light/dark background, but the 'exelixbg' panel as well after being patched with a custom background N_Root N_GameRoot : contains all items that will be scrolled N_Icon[00-11] : all 12 game icons. They make use of the same layout N_Icon_12 L_BtnFlc : the 13th icon in the gameroot: the 'all apps' button N_System : contains all six system applets L_BtnNoti : the notifications button L_BtnShop : the eshop button L_BtnCtrl : the album button L_BtnPvr : the controllers button L_BtnSet : the settings button L_BtnPow : the power button L_ChildLock/RdtBtnChildLock.bflyt : the childlock button N_Balloon N_MyPage L_BtnAccount_[00-07] : all usericons which make use of a single layout L_Hud : the hud (clock, network, battery) L_BalloonCtrl : the balloon that pops up when (dis)connecting a controller All files in ResidentMenu.szs \u00b6 Filename Hypothetical full name BatteryConsole.bflyt BatteryConsole BgNml.bflyt BackgroundNormal Cursor3.bflyt Cursor3 GTNumL.bflyt GeneralTimeNumberLarge GTNumM.bflyt GeneralTimeNumberMedium Hud.bflyt Hud HudBatteryNum.bflyt HudBatteryNumber HudSignal.bflyt HudSignal HudTime.bflyt HudTime RdtBalloon.bflyt ResidentMenuBalloon RdtBalloonCtrl.bflyt ResidentMenuBalloonController RdtBalloonSystemApplet.bflyt ResidentMenuBalloonSystemApplet RdtBase.bflyt ResidentMenuBase RdtBtnChildLock.bflyt ResidentMenuButtonChildLock RdtBtnCtrl.bflyt ResidentMenuButtonController RdtBtnFullLauncher.bflyt ResidentMenuButtonFullLauncher RdtBtnIconGame.bflyt ResidentMenuButtonIconGame RdtBtnMyPage.bflyt ResidentMenuButtonMyPage RdtBtnNtf.bflyt ResidentMenuButtonNotification RdtBtnPow.bflyt ResidentMenuButtonPower RdtBtnPvr.bflyt ResidentMenuButtonPictureviewer RdtBtnSet.bflyt ResidentMenuButtonSettings RdtBtnShop.bflyt ResidentMenuButtonShop RdtIconPromotion.bflyt ResidentMenuIconPromotion","title":"Home Menu"},{"location":"menu-docs/menus/ResidentMenu/#home-menu","text":"File: ResidentMenu.szs Main bflyt file: RdtBase.bflyt","title":"Home Menu"},{"location":"menu-docs/menus/ResidentMenu/#general-parts-in-this-menu","text":"Cursor: Cursor3.bflyt App Name Balloon: RdtBalloon.bflyt Time (Numbers): GTNumL.bflyt and GTNumM.bflyt Time (AM, PM, Colon): HudTime.bflyt Wifi Signal: HudSignal.bflyt Battery (Icon): BatteryConsole.bflyt Battery (Percent): HudBatteryNum.bflyt Full Launcher (All Apps): RdtBtnFullLauncher.bflyt","title":"General Parts in This Menu"},{"location":"menu-docs/menus/ResidentMenu/#tree","text":"RdtBase.bflyt L_BgNml : contains the original light/dark background, but the 'exelixbg' panel as well after being patched with a custom background N_Root N_GameRoot : contains all items that will be scrolled N_Icon[00-11] : all 12 game icons. They make use of the same layout N_Icon_12 L_BtnFlc : the 13th icon in the gameroot: the 'all apps' button N_System : contains all six system applets L_BtnNoti : the notifications button L_BtnShop : the eshop button L_BtnCtrl : the album button L_BtnPvr : the controllers button L_BtnSet : the settings button L_BtnPow : the power button L_ChildLock/RdtBtnChildLock.bflyt : the childlock button N_Balloon N_MyPage L_BtnAccount_[00-07] : all usericons which make use of a single layout L_Hud : the hud (clock, network, battery) L_BalloonCtrl : the balloon that pops up when (dis)connecting a controller","title":"Tree"},{"location":"menu-docs/menus/ResidentMenu/#all-files-in-residentmenuszs","text":"Filename Hypothetical full name BatteryConsole.bflyt BatteryConsole BgNml.bflyt BackgroundNormal Cursor3.bflyt Cursor3 GTNumL.bflyt GeneralTimeNumberLarge GTNumM.bflyt GeneralTimeNumberMedium Hud.bflyt Hud HudBatteryNum.bflyt HudBatteryNumber HudSignal.bflyt HudSignal HudTime.bflyt HudTime RdtBalloon.bflyt ResidentMenuBalloon RdtBalloonCtrl.bflyt ResidentMenuBalloonController RdtBalloonSystemApplet.bflyt ResidentMenuBalloonSystemApplet RdtBase.bflyt ResidentMenuBase RdtBtnChildLock.bflyt ResidentMenuButtonChildLock RdtBtnCtrl.bflyt ResidentMenuButtonController RdtBtnFullLauncher.bflyt ResidentMenuButtonFullLauncher RdtBtnIconGame.bflyt ResidentMenuButtonIconGame RdtBtnMyPage.bflyt ResidentMenuButtonMyPage RdtBtnNtf.bflyt ResidentMenuButtonNotification RdtBtnPow.bflyt ResidentMenuButtonPower RdtBtnPvr.bflyt ResidentMenuButtonPictureviewer RdtBtnSet.bflyt ResidentMenuButtonSettings RdtBtnShop.bflyt ResidentMenuButtonShop RdtIconPromotion.bflyt ResidentMenuIconPromotion","title":"All files in ResidentMenu.szs"},{"location":"menu-docs/menus/ResidentMenu/RdtBalloon.bflyt/","text":"RdtBalloon.bflyt \u00b6 Tree \u00b6 N_Root N_Trans N_Size N_Scissor N_Offset P_Reset N_Scroll : contains all scrolling pars in the balloon (so only the text really) T_Main : the icon's name N_Margin T_Sub N_Card P_Card : the card icon","title":"RdtBalloon.bflyt"},{"location":"menu-docs/menus/ResidentMenu/RdtBalloon.bflyt/#rdtballoonbflyt","text":"","title":"RdtBalloon.bflyt"},{"location":"menu-docs/menus/ResidentMenu/RdtBalloon.bflyt/#tree","text":"N_Root N_Trans N_Size N_Scissor N_Offset P_Reset N_Scroll : contains all scrolling pars in the balloon (so only the text really) T_Main : the icon's name N_Margin T_Sub N_Card P_Card : the card icon","title":"Tree"},{"location":"menu-docs/menus/ResidentMenu/RdtBtnIconGame.bflyt/","text":"RdtBtnIconGame.bflyt \u00b6 Tree \u00b6 N_Root N_Delete N_DecideKey N_DecideTouch P_BtnBase : the white background hidden behind a game icon. Can shortly be seen after boot. P_IconGame : the game's icon P_Blank L_Loading : the loading icon displayed on top of P_BtnBase N_Suspend N_SuspendPos N_TextPos P_Suspend_00 : the white oval background behind the text T_Suspend : the 'Playing' text when a game is opened P account [03-00] : the usericon displayed on the left of the 'Playing' indicator N_DL: loading bars you don't have to care about P_BtnDecideKey : the blue overlay which can be seen when a game is launched via the controller P_BtnTouch : the blue overlay which can be seen when tapping/holding the game icon P_InnerCursor : the white ring displayed between the blue cursor and the game icon N_BtnFocusKey UF_Cursor/Cursor3.bflyt : the blue cursor displayed around the game icon P_EffectDecide : the effect when a game is launched, a second game icon can be seen dissolving N_Promotion L_Promotion/RdtIconPromotion.bflyt : the yet-to-be-announced 'test' or 'try' function for games N_Tip RdtBalloon.bflyt : the game's name/text in blue B_Hit : hitbox of all the items in N_DecideKey","title":"RdtBtnIconGame.bflyt"},{"location":"menu-docs/menus/ResidentMenu/RdtBtnIconGame.bflyt/#rdtbtnicongamebflyt","text":"","title":"RdtBtnIconGame.bflyt"},{"location":"menu-docs/menus/ResidentMenu/RdtBtnIconGame.bflyt/#tree","text":"N_Root N_Delete N_DecideKey N_DecideTouch P_BtnBase : the white background hidden behind a game icon. Can shortly be seen after boot. P_IconGame : the game's icon P_Blank L_Loading : the loading icon displayed on top of P_BtnBase N_Suspend N_SuspendPos N_TextPos P_Suspend_00 : the white oval background behind the text T_Suspend : the 'Playing' text when a game is opened P account [03-00] : the usericon displayed on the left of the 'Playing' indicator N_DL: loading bars you don't have to care about P_BtnDecideKey : the blue overlay which can be seen when a game is launched via the controller P_BtnTouch : the blue overlay which can be seen when tapping/holding the game icon P_InnerCursor : the white ring displayed between the blue cursor and the game icon N_BtnFocusKey UF_Cursor/Cursor3.bflyt : the blue cursor displayed around the game icon P_EffectDecide : the effect when a game is launched, a second game icon can be seen dissolving N_Promotion L_Promotion/RdtIconPromotion.bflyt : the yet-to-be-announced 'test' or 'try' function for games N_Tip RdtBalloon.bflyt : the game's name/text in blue B_Hit : hitbox of all the items in N_DecideKey","title":"Tree"}]}