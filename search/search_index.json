{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to LayoutDocs! \u00b6 Warning If you're looking for a guide on how to create a theme, this is not the right place. This guide is specifically for the process of creating custom layouts : the actual layout of menu components. The difference is that a layout can be used in many themes. For example, these themes all use Doge Layout . Getting Started \u00b6","title":"Home"},{"location":"#welcome-to-layoutdocs","text":"Warning If you're looking for a guide on how to create a theme, this is not the right place. This guide is specifically for the process of creating custom layouts : the actual layout of menu components. The difference is that a layout can be used in many themes. For example, these themes all use Doge Layout .","title":"Welcome to LayoutDocs!"},{"location":"#getting-started","text":"","title":"Getting Started "},{"location":"definitions/","text":"Definitions \u00b6 This page tries to explain as much of the theming jargon as possible. Word List \u00b6 SZS \u00b6 An archive. In the Switch's menu files it contains the layout files, animations and textures. More Info Applet \u00b6 A kind of title/app/game. Qlaunch , playerSelect , photoViewer are all applets. More Info nxtheme \u00b6 Unfortunately SZS files from the Switch's firmware files contain copyrighted data and can't be shared online. In order to still share custom themes, the nxtheme format was developed. An nxtheme file contains theme details (name, author), images and the layout. exelixbg \u00b6 The exelixbg is the name of the panel that is added to the menus when injecting an image into __Combined.bntx file in SZS files. Diffing, Diffed JSON, Layout JSON \u00b6 A layout is created by comparing a modified SZS file with the original unmodified one. The changes that are detected are saved in a layout json file, which then only contains differential data. This way, sharing nxthemes is completely legal. Panes \u00b6 Another term for elements in bflyt files. For example P_Pict , N_Button . usd section \u00b6 usd (officially called 'extended user information') is a part of the bflyt file that holds extra data and defines, for example, shadows, radius, etc. Panes are often followed by usd sections. More Info Sysupdate \u00b6 Short for system update","title":"Definitions"},{"location":"definitions/#definitions","text":"This page tries to explain as much of the theming jargon as possible.","title":"Definitions"},{"location":"definitions/#word-list","text":"","title":"Word List"},{"location":"definitions/#szs","text":"An archive. In the Switch's menu files it contains the layout files, animations and textures. More Info","title":"SZS"},{"location":"definitions/#applet","text":"A kind of title/app/game. Qlaunch , playerSelect , photoViewer are all applets. More Info","title":"Applet"},{"location":"definitions/#nxtheme","text":"Unfortunately SZS files from the Switch's firmware files contain copyrighted data and can't be shared online. In order to still share custom themes, the nxtheme format was developed. An nxtheme file contains theme details (name, author), images and the layout.","title":"nxtheme"},{"location":"definitions/#exelixbg","text":"The exelixbg is the name of the panel that is added to the menus when injecting an image into __Combined.bntx file in SZS files.","title":"exelixbg"},{"location":"definitions/#diffing-diffed-json-layout-json","text":"A layout is created by comparing a modified SZS file with the original unmodified one. The changes that are detected are saved in a layout json file, which then only contains differential data. This way, sharing nxthemes is completely legal.","title":"Diffing, Diffed JSON, Layout JSON"},{"location":"definitions/#panes","text":"Another term for elements in bflyt files. For example P_Pict , N_Button .","title":"Panes"},{"location":"definitions/#usd-section","text":"usd (officially called 'extended user information') is a part of the bflyt file that holds extra data and defines, for example, shadows, radius, etc. Panes are often followed by usd sections. More Info","title":"usd section"},{"location":"definitions/#sysupdate","text":"Short for system update","title":"Sysupdate"},{"location":"extras/discord-servers/","text":"Discord Servers \u00b6 This is a list of Switch-related Discord servers. Servers \u00b6 ThemezerNX","title":"Discord Servers"},{"location":"extras/discord-servers/#discord-servers","text":"This is a list of Switch-related Discord servers.","title":"Discord Servers"},{"location":"extras/discord-servers/#servers","text":"ThemezerNX","title":"Servers"},{"location":"extras/guides/","text":"Other Switch-related Guides \u00b6 The Ultimate Noob Guide for Hacking your Nintendo Switch (and Wii U) From stock to Atmosphere . A guide collaboration between Nintendo Homebrew's Helpers and Staff. ( mirror ) A translation guide for the Switch's system menus Making your own custom animations Importing Animations to your own Layout from another theme Importing Animations using the Layout Editor Rainbow Simple Homescreen with Rounded Icons and Album Icon Tutorial You can change the theme icon in the settings menu Custom Game Icons BFLYT and BFLAN Editing With Switch Toolbox","title":"Guides"},{"location":"extras/guides/#other-switch-related-guides","text":"The Ultimate Noob Guide for Hacking your Nintendo Switch (and Wii U) From stock to Atmosphere . A guide collaboration between Nintendo Homebrew's Helpers and Staff. ( mirror ) A translation guide for the Switch's system menus Making your own custom animations Importing Animations to your own Layout from another theme Importing Animations using the Layout Editor Rainbow Simple Homescreen with Rounded Icons and Album Icon Tutorial You can change the theme icon in the settings menu Custom Game Icons BFLYT and BFLAN Editing With Switch Toolbox","title":"Other Switch-related Guides"},{"location":"extras/other/","text":"Other \u00b6 Here are some uncategorised extras. A website that diffs sysupdates automatically","title":"Other"},{"location":"extras/other/#other","text":"Here are some uncategorised extras. A website that diffs sysupdates automatically","title":"Other"},{"location":"extras/tools/","text":"Tools \u00b6 Here are some tools that might be useful for theming and other types of modding. Info Some of these tools are used in LayoutKit. Those that are, are marked with . Theming Tools \u00b6 Switch-Toolbox Supported filetypes: See this list The Switch Toolbox can open and modify many file formats you might encounter when, for example, modding games. This is a visual editor. It also has support for the Switch's menu files and can often even preview them! Switch Theme Injector Supported filetypes: szs , nxtheme , json Switch Theme Injector (Windows app) : An app to create and edit custom themes. Switch Theme Injector Online (also called WebInjector): A port of the windows injector as a web app, however, it lacks some features like custom icons and common.szs support. NXThemes Installer: An homebrew app that runs on the switch itself and can be used to install and manage themes. SwitchLayoutEditor Supported filetypes: blfyt , bflan The Switch Layout Editor was specially developed for creating custom layouts. This is a visual editor. A basic introduction to the tool is available here . 3DSKit Supported filetypes: See this list 3DSKit can convert many Nintendo formats to more common file formats and vice versa. A few output types are: audio files, images, json, and txt. You need a text editor to modify the output. SARC-Tool Supported filetypes: sarc , arc , szs A tool for extracting and packing SARC/SZS files. Makes use of SarcLib and libyaz0. BNTX-Extractor Supported filetypes: bntx Extracts textures from the Binary NX Texture ( BNTX / .bntx file extension) format used in Switch games, and saves them as DDS . BNTX-Editor Supported filetypes: bntx A tool for editing Binary Resources Texture (BNTX) files. Other Tools \u00b6 Kuriimu2 Supported filetypes: See this list Kuriimu2 is a general purpose game translation project manager and toolkit for authors of fan translations and game mods. This tool also works for the Switch's menus. Here's an example of a fan-translation in Polish. Game Icon Customizer Supported filetype: N/A An application to simplify the method of changing game icons in Atmosphere.","title":"Tools"},{"location":"extras/tools/#tools","text":"Here are some tools that might be useful for theming and other types of modding. Info Some of these tools are used in LayoutKit. Those that are, are marked with .","title":"Tools"},{"location":"extras/tools/#theming-tools","text":"Switch-Toolbox Supported filetypes: See this list The Switch Toolbox can open and modify many file formats you might encounter when, for example, modding games. This is a visual editor. It also has support for the Switch's menu files and can often even preview them! Switch Theme Injector Supported filetypes: szs , nxtheme , json Switch Theme Injector (Windows app) : An app to create and edit custom themes. Switch Theme Injector Online (also called WebInjector): A port of the windows injector as a web app, however, it lacks some features like custom icons and common.szs support. NXThemes Installer: An homebrew app that runs on the switch itself and can be used to install and manage themes. SwitchLayoutEditor Supported filetypes: blfyt , bflan The Switch Layout Editor was specially developed for creating custom layouts. This is a visual editor. A basic introduction to the tool is available here . 3DSKit Supported filetypes: See this list 3DSKit can convert many Nintendo formats to more common file formats and vice versa. A few output types are: audio files, images, json, and txt. You need a text editor to modify the output. SARC-Tool Supported filetypes: sarc , arc , szs A tool for extracting and packing SARC/SZS files. Makes use of SarcLib and libyaz0. BNTX-Extractor Supported filetypes: bntx Extracts textures from the Binary NX Texture ( BNTX / .bntx file extension) format used in Switch games, and saves them as DDS . BNTX-Editor Supported filetypes: bntx A tool for editing Binary Resources Texture (BNTX) files.","title":"Theming Tools"},{"location":"extras/tools/#other-tools","text":"Kuriimu2 Supported filetypes: See this list Kuriimu2 is a general purpose game translation project manager and toolkit for authors of fan translations and game mods. This tool also works for the Switch's menus. Here's an example of a fan-translation in Polish. Game Icon Customizer Supported filetype: N/A An application to simplify the method of changing game icons in Atmosphere.","title":"Other Tools"},{"location":"guide/","text":"Getting Started \u00b6 For this guide it is expected that you already have basic knowledge on how to install themes. If you don't, it is recommended to read this page to at least get a basic idea of what you're getting yourself into ;P What You'll Need \u00b6 A hacked Switch, connected to LAN (use, for example, 90dns to block connections to Nintendo) A Windows computer NXThemes Installer version \u22652.6.2 (not out yet) You probably already have this. You only need the NXThemesInstaller.nro . You can also install this homebrew app from the HB App Store. LayoutKit LayoutKit requires a Windows installation. While this guide might be built around LayoutKit, everything should be doable without it. sys-ftpd with reboot support Info LayoutKit comes packed with the most-used tools. If you are unable to or don't want to use LayoutKit, see this list of tools , which includes the ones used by LayoutKit. Initial Setup \u00b6 Download and install LayoutKit. Install the NXThemes Installer. Make sure the NXThemes Installer is working and you're running version \u22652.6.2. Warning This version has not been released yet. Currently, the player select and user page menu are only extracted when you install a theme for them. You can do that, or wait for the new version to release. When it has, you can go to Firmwares , click 'Open Folder' and place Psl.szs and MyPage.szs there. Open the NXThemes Installer and follow the instructions if this is the first time you open it. Copy the SD://themes/systemData folder to your computer. Copy the contents of the sys-ftpd archive to the root of your MicroSD. It is recommended that you change sys-ftpd's password. Do this by editing SD://config/sys-ftpd/config.ini . Remember the value you set. Configuring LayoutKit \u00b6 Read the 'Info' tab to get familiar with LayoutKit's features. Go to the 'Settings' tab and fill in your Switch's IP address. You can find it by going to System Settings > Internet under 'Connection status'. Configure the password if you changed it from the default ( nxthemer ). Changes are saved automatically. The loader in the top right of the application should now stop spinning and turn green. If it does not, check your FTP details. Go to the 'Firmwares' tab and click 'Import'. CLick the box that says 'ver.cfg path' and navigate to the ver.cfg in the systemData folder you copied earlier. The version should automatically be configured. If you already have this version imported, there is no need to do so again. LayoutKit will make sure the stock files stay unmodified (except if you manually start editing the application data ofcourse). Click 'Import'. Go to the 'Projects' tab and modify the settings on the 'Quick Settings' card to your likings. You can see that there also is a button to manually restart the console when it is connected. The install On the 'Project Browser' tab click 'New' and fill in the fields. Select the menus you want to include in your environment (you can change this later). The new project is automatically selected. You can apply an existing layout to any of the menus by clicking 'Apply JSON'. This will overwrite the file. Important You will always have to re-open Switch-Toolbox (see next step) after having applied a layout. Click any of the blue buttons with a wrench icon. This will open the Switch-Toolbox, in which you can make modifications to the menus. Go to Settings > Main Settings > Editor , check Always compress on save , and click 'Save'. This will decrease the amount of clicks required when saving a file. If you now double-click any of the bflyt or bflan files in the respective blyt and anim folders, Switch-Toolbox will open a second window. After you made changes, go to File > Save Layout in the second window. When you're done making changes to the bflyt or bflan files, go to File > Save in the first window. The file on the disk is now updated. LayoutKit will detect changes made to the files of the current active project, meaning that after you saved an szs the 'Install' button on the 'Quick Settings' card will light up. If you enabled 'Install on Change', the button show a loading animation automatically and become greyed out again. You can export all changes that were made as a layout by clicking 'Save JSON'. Make sure you edit it afterwards and set the your name as author! Optional Steps \u00b6 If you did not include all menu's when creating the project you can click the green pencil button next to 'Copy' and select more. You can copy a project if you want to test something and not mess up your original. You can do so by clicking 'Copy'. You can delete firmwares, projects, or project menus by clicking the red delete button. Tip Any item that is deleted will be moved to the trash, so if you were to accidentally delete something you're in luck! Restoring the files from your trash and clicking the refresh button is enough. Continue to Menu Files \u00b6","title":"Getting Started"},{"location":"guide/#getting-started","text":"For this guide it is expected that you already have basic knowledge on how to install themes. If you don't, it is recommended to read this page to at least get a basic idea of what you're getting yourself into ;P","title":"Getting Started"},{"location":"guide/#what-youll-need","text":"A hacked Switch, connected to LAN (use, for example, 90dns to block connections to Nintendo) A Windows computer NXThemes Installer version \u22652.6.2 (not out yet) You probably already have this. You only need the NXThemesInstaller.nro . You can also install this homebrew app from the HB App Store. LayoutKit LayoutKit requires a Windows installation. While this guide might be built around LayoutKit, everything should be doable without it. sys-ftpd with reboot support Info LayoutKit comes packed with the most-used tools. If you are unable to or don't want to use LayoutKit, see this list of tools , which includes the ones used by LayoutKit.","title":"What You'll Need"},{"location":"guide/#initial-setup","text":"Download and install LayoutKit. Install the NXThemes Installer. Make sure the NXThemes Installer is working and you're running version \u22652.6.2. Warning This version has not been released yet. Currently, the player select and user page menu are only extracted when you install a theme for them. You can do that, or wait for the new version to release. When it has, you can go to Firmwares , click 'Open Folder' and place Psl.szs and MyPage.szs there. Open the NXThemes Installer and follow the instructions if this is the first time you open it. Copy the SD://themes/systemData folder to your computer. Copy the contents of the sys-ftpd archive to the root of your MicroSD. It is recommended that you change sys-ftpd's password. Do this by editing SD://config/sys-ftpd/config.ini . Remember the value you set.","title":"Initial Setup"},{"location":"guide/#configuring-layoutkit","text":"Read the 'Info' tab to get familiar with LayoutKit's features. Go to the 'Settings' tab and fill in your Switch's IP address. You can find it by going to System Settings > Internet under 'Connection status'. Configure the password if you changed it from the default ( nxthemer ). Changes are saved automatically. The loader in the top right of the application should now stop spinning and turn green. If it does not, check your FTP details. Go to the 'Firmwares' tab and click 'Import'. CLick the box that says 'ver.cfg path' and navigate to the ver.cfg in the systemData folder you copied earlier. The version should automatically be configured. If you already have this version imported, there is no need to do so again. LayoutKit will make sure the stock files stay unmodified (except if you manually start editing the application data ofcourse). Click 'Import'. Go to the 'Projects' tab and modify the settings on the 'Quick Settings' card to your likings. You can see that there also is a button to manually restart the console when it is connected. The install On the 'Project Browser' tab click 'New' and fill in the fields. Select the menus you want to include in your environment (you can change this later). The new project is automatically selected. You can apply an existing layout to any of the menus by clicking 'Apply JSON'. This will overwrite the file. Important You will always have to re-open Switch-Toolbox (see next step) after having applied a layout. Click any of the blue buttons with a wrench icon. This will open the Switch-Toolbox, in which you can make modifications to the menus. Go to Settings > Main Settings > Editor , check Always compress on save , and click 'Save'. This will decrease the amount of clicks required when saving a file. If you now double-click any of the bflyt or bflan files in the respective blyt and anim folders, Switch-Toolbox will open a second window. After you made changes, go to File > Save Layout in the second window. When you're done making changes to the bflyt or bflan files, go to File > Save in the first window. The file on the disk is now updated. LayoutKit will detect changes made to the files of the current active project, meaning that after you saved an szs the 'Install' button on the 'Quick Settings' card will light up. If you enabled 'Install on Change', the button show a loading animation automatically and become greyed out again. You can export all changes that were made as a layout by clicking 'Save JSON'. Make sure you edit it afterwards and set the your name as author!","title":"Configuring LayoutKit"},{"location":"guide/#optional-steps","text":"If you did not include all menu's when creating the project you can click the green pencil button next to 'Copy' and select more. You can copy a project if you want to test something and not mess up your original. You can do so by clicking 'Copy'. You can delete firmwares, projects, or project menus by clicking the red delete button. Tip Any item that is deleted will be moved to the trash, so if you were to accidentally delete something you're in luck! Restoring the files from your trash and clicking the refresh button is enough.","title":"Optional Steps"},{"location":"guide/#continue-to-menu-files","text":"","title":"Continue to Menu Files "},{"location":"guide/diffing/","text":"Back to USD Sections \u00b6 Diffing \u00b6 TODO Continue to Examples \u00b6","title":"Diffing"},{"location":"guide/diffing/#diffing","text":"TODO","title":"Diffing"},{"location":"guide/diffing/#continue-to-examples","text":"","title":"Continue to Examples "},{"location":"guide/filetypes/","text":"Back to Menu Files \u00b6 Filetypes \u00b6 This page contains a list of all filetypes related to custom layouts and theming. SZS Files \u00b6 SZS files are archives with a custom compression algorithm. They are actually SARC (aka ARC ) files. The compression algorithm that is used is Yaz0. Structure \u00b6 The structure of a menu SZS file is generally the same: \ud83d\udce6ResidentMenu_11.0.1_original \u2523 \ud83d\udcc2anim \u2503 \u2517 \ud83d\udcdc[filename].bflan \u2523 \ud83d\udcc2bgsh \u2503 \u2523 \ud83d\udcdc__ArchiveShader.bnsh \u2503 \u2517 \ud83d\udcdc__ArchiveShader.bushvt \u2523 \ud83d\udcc2blyt \u2503 \u2517 \ud83d\udcdc[filename].bflyt \u2517 \ud83d\udcc2timg \u2517 \ud83d\udcdc__Combined.bntx The folders contain the following: anim : Animation files ( .bflan ) bgsh : GPU shaders ( .bnsh , .bushvt ) blyt : Layout files ( .bflyt ) timg : Menu images ( .bntx ) For custom layouts we only touch the files in anim and blyt . However, it is interesting to note that the NXTheme Installer internally injects the nxtheme background image in the __Combined.bntx file. bflan Files \u00b6 bflan files, or ' B inary ca F e L ayout AN imation' files, bflyt Files \u00b6 bflyt files, or ' B inary ca F e L a Y ou T ' files, Continue to Layouts \u00b6","title":"Filetypes"},{"location":"guide/filetypes/#filetypes","text":"This page contains a list of all filetypes related to custom layouts and theming.","title":"Filetypes"},{"location":"guide/filetypes/#szs-files","text":"SZS files are archives with a custom compression algorithm. They are actually SARC (aka ARC ) files. The compression algorithm that is used is Yaz0.","title":"SZS Files"},{"location":"guide/filetypes/#structure","text":"The structure of a menu SZS file is generally the same: \ud83d\udce6ResidentMenu_11.0.1_original \u2523 \ud83d\udcc2anim \u2503 \u2517 \ud83d\udcdc[filename].bflan \u2523 \ud83d\udcc2bgsh \u2503 \u2523 \ud83d\udcdc__ArchiveShader.bnsh \u2503 \u2517 \ud83d\udcdc__ArchiveShader.bushvt \u2523 \ud83d\udcc2blyt \u2503 \u2517 \ud83d\udcdc[filename].bflyt \u2517 \ud83d\udcc2timg \u2517 \ud83d\udcdc__Combined.bntx The folders contain the following: anim : Animation files ( .bflan ) bgsh : GPU shaders ( .bnsh , .bushvt ) blyt : Layout files ( .bflyt ) timg : Menu images ( .bntx ) For custom layouts we only touch the files in anim and blyt . However, it is interesting to note that the NXTheme Installer internally injects the nxtheme background image in the __Combined.bntx file.","title":"Structure"},{"location":"guide/filetypes/#bflan-files","text":"bflan files, or ' B inary ca F e L ayout AN imation' files,","title":"bflan Files"},{"location":"guide/filetypes/#bflyt-files","text":"bflyt files, or ' B inary ca F e L a Y ou T ' files,","title":"bflyt Files"},{"location":"guide/filetypes/#continue-to-layouts","text":"","title":"Continue to Layouts "},{"location":"guide/menu-files/","text":"Back to Introduction \u00b6 Menu Files \u00b6 The Switch's menus can be found in multiple firmware files. Separated into multiple applets . The following table shows which menus (supported in themes) can be found where: Applet CodeName TitleID Menus qlaunch 0100000000001000 Home Menu, Lockscreen, All Apps, News, Settings playerSelect 0100000000001007 Player Select myPage 0100000000001013 User Page Almost all menu-related applets also have a common.szs file that defines structures that should be used throughout all menus in the applet. They often contain the bottom bar (controller status, buttons). Filenames \u00b6 Every menu has its own file. Here is a list of the supported menus and their filenames: Menu Filename Home Menu ResidentMenu.szs Lockscreen Entrance.szs All Apps Flaunch.szs News Notification.szs Settings Set.szs Player Select Psl.szs User Page MyPage.szs Continue to Filetypes \u00b6","title":"Menu Files"},{"location":"guide/menu-files/#menu-files","text":"The Switch's menus can be found in multiple firmware files. Separated into multiple applets . The following table shows which menus (supported in themes) can be found where: Applet CodeName TitleID Menus qlaunch 0100000000001000 Home Menu, Lockscreen, All Apps, News, Settings playerSelect 0100000000001007 Player Select myPage 0100000000001013 User Page Almost all menu-related applets also have a common.szs file that defines structures that should be used throughout all menus in the applet. They often contain the bottom bar (controller status, buttons).","title":"Menu Files"},{"location":"guide/menu-files/#filenames","text":"Every menu has its own file. Here is a list of the supported menus and their filenames: Menu Filename Home Menu ResidentMenu.szs Lockscreen Entrance.szs All Apps Flaunch.szs News Notification.szs Settings Set.szs Player Select Psl.szs User Page MyPage.szs","title":"Filenames"},{"location":"guide/menu-files/#continue-to-filetypes","text":"","title":"Continue to Filetypes "},{"location":"guide/animations/","text":"Back to Layouts \u00b6 Animations \u00b6 This tool guide shows how you can create animations This guide shows how you have to implement the groups so that the animations work with the Switch Theme Injector TODO Explain how groups work give an example how to create a new group Show how to create new animations using toolbox Continue to Examples \u00b6","title":"Getting Started"},{"location":"guide/animations/#animations","text":"This tool guide shows how you can create animations This guide shows how you have to implement the groups so that the animations work with the Switch Theme Injector TODO Explain how groups work give an example how to create a new group Show how to create new animations using toolbox","title":"Animations"},{"location":"guide/animations/#continue-to-examples","text":"","title":"Continue to Examples "},{"location":"guide/examples/","text":"This part of the guide contains examples and instructions how to do specific things. The list can be seen on the left. Note Examples may be incomplete Examples may be outdated Important The examples might give pieces of JSON that you can use. This JSON refers to the diffed json generated by the SwitchThemeInjector or SwitchLayoutEditor unless stated otherwise . It does not refer to json generated by 3DSKit by default .","title":"Getting Started"},{"location":"guide/examples/changing-component-sizes/","text":"Changing the Size of Components \u00b6 TODO","title":"Changing Component Sizes"},{"location":"guide/examples/changing-component-sizes/#changing-the-size-of-components","text":"TODO","title":"Changing the Size of Components"},{"location":"guide/examples/custom-element-colors/","text":"Blue Menu - Home by Maxu/Maximum Modifying the colors of for example buttons, text, lines icons is possible. A theme that makes use of this functionality is Blue by Mazu/Maximum . Any color is supported and the idea is the same in every menu. Example Code \u00b6 { \"TargetName\" : \"ResidentMenu.szs\" , \"Files\" : [ { \"FileName\" : \"blyt/RdtBtnSet.bflyt\" , \"Patches\" : [ { \"PaneName\" : \"P_Pict\" , \"UsdPatches\" : [ { \"PropName\" : \"C_W\" , \"PropValues\" : [ \"0\" , \"0\" , \"0\" , \"0\" ], \"type\" : 1 } ], \"ColorTL\" : \"FFF2C100\" , \"ColorTR\" : \"FFF2C100\" , \"ColorBL\" : \"FFF2C100\" , \"ColorBR\" : \"FFF2C100\" } ], \"Materials\" : [ { \"MaterialName\" : \"P_Pict\" , \"BackgroundColor\" : \"FFFFFFFF\" } ] } ] } These main menu elements need to be changed in the common.szs , which is applied as a patch in Theme Injector. Important Since the color format is actually AABBGGRR you'll have to swap the red and blue values to get the right color. For example, the hex color code C02BE1 would become FFE12BC0 . Info It is currently unknown how exactly to change the cursor's default blue pulse color, but P_Grow and P_Main in Cursor3.bflyt contain color codes. Changing these will change the secondary pulse color. The primary pulse color is probabily a combination of these panes and their usd sections . To hide the default circle around the menu icon: { \"PaneName\" : \"L_Balloon\" , \"Visible\" : false }, Credits to Mazu/Maxim and Exelix","title":"Custom Element Colors"},{"location":"guide/examples/custom-element-colors/#example-code","text":"{ \"TargetName\" : \"ResidentMenu.szs\" , \"Files\" : [ { \"FileName\" : \"blyt/RdtBtnSet.bflyt\" , \"Patches\" : [ { \"PaneName\" : \"P_Pict\" , \"UsdPatches\" : [ { \"PropName\" : \"C_W\" , \"PropValues\" : [ \"0\" , \"0\" , \"0\" , \"0\" ], \"type\" : 1 } ], \"ColorTL\" : \"FFF2C100\" , \"ColorTR\" : \"FFF2C100\" , \"ColorBL\" : \"FFF2C100\" , \"ColorBR\" : \"FFF2C100\" } ], \"Materials\" : [ { \"MaterialName\" : \"P_Pict\" , \"BackgroundColor\" : \"FFFFFFFF\" } ] } ] } These main menu elements need to be changed in the common.szs , which is applied as a patch in Theme Injector. Important Since the color format is actually AABBGGRR you'll have to swap the red and blue values to get the right color. For example, the hex color code C02BE1 would become FFE12BC0 . Info It is currently unknown how exactly to change the cursor's default blue pulse color, but P_Grow and P_Main in Cursor3.bflyt contain color codes. Changing these will change the secondary pulse color. The primary pulse color is probabily a combination of these panes and their usd sections . To hide the default circle around the menu icon: { \"PaneName\" : \"L_Balloon\" , \"Visible\" : false }, Credits to Mazu/Maxim and Exelix","title":"Example Code"},{"location":"guide/examples/hide-header-footer-lines/","text":"Vanilla-ish Two Row Layout by gobbldygook Example Code \u00b6 { \"TargetName\" : \"common.szs\" , \"Files\" : [ { \"FileName\" : \"blyt/LineFooter.bflyt\" , \"Patches\" : [ { \"PaneName\" : \"P_Line\" , \"Visible\" : false } ] } ] } TODO https://discord.com/channels/490398602250682368/495894801040801792/549270669326680064","title":"Hide Header & Footer Lines"},{"location":"guide/examples/hide-header-footer-lines/#example-code","text":"{ \"TargetName\" : \"common.szs\" , \"Files\" : [ { \"FileName\" : \"blyt/LineFooter.bflyt\" , \"Patches\" : [ { \"PaneName\" : \"P_Line\" , \"Visible\" : false } ] } ] } TODO https://discord.com/channels/490398602250682368/495894801040801792/549270669326680064","title":"Example Code"},{"location":"guide/examples/pull-push-front-back/","text":"Pulling panes to the front in an old version of Careful Layout by Migush In the case that z-coordinates do not work, there is another way to pull panes to the front or push them to the back. This example shows how you can do that. It has to do with the order in which panes are listed in the lyt file. Panes are rendered from top to bottom in the hierary tree: The two properties supported by the NXTheme Installer / Injector are: PushBackPanes (array) PullFrontPanes (array) Warning The Switch Theme Injector does not detect changes in pane positions made using the Switch Toolbox or Layout Editor. These changes must made in the final layout json manually ! Example Code \u00b6 This example pulls the N_Tip (the text) of the eShop button to the front as seen in the image at the top of the page. { \"TargetName\" : \"ResidentMenu.szs\" , \"Files\" : [ { \"FileName\" : \"blyt/RdtBtnShop.bflyt\" , \"PushBackPanes\" : [ \"N_Tip\" ] } ] } Important Note the PushBackPanes instead of PullFrontPanes . This is correct, since internally \"push back\" means \"push the pane back from the top to bottom\". Before \u00b6 After \u00b6","title":"Pulling & Pushing Panes"},{"location":"guide/examples/pull-push-front-back/#example-code","text":"This example pulls the N_Tip (the text) of the eShop button to the front as seen in the image at the top of the page. { \"TargetName\" : \"ResidentMenu.szs\" , \"Files\" : [ { \"FileName\" : \"blyt/RdtBtnShop.bflyt\" , \"PushBackPanes\" : [ \"N_Tip\" ] } ] } Important Note the PushBackPanes instead of PullFrontPanes . This is correct, since internally \"push back\" means \"push the pane back from the top to bottom\".","title":"Example Code"},{"location":"guide/examples/pull-push-front-back/#before","text":"","title":"Before"},{"location":"guide/examples/pull-push-front-back/#after","text":"","title":"After"},{"location":"guide/examples/reposition-gamerow/","text":"Repositioning and Scaling the Gamerow \u00b6 Flow Layout by Migush TODO Moving the first icon before x=127 (right?) may cause the cursor to get stuck.","title":"Repositioning the Gamerow"},{"location":"guide/examples/reposition-gamerow/#repositioning-and-scaling-the-gamerow","text":"Flow Layout by Migush TODO Moving the first icon before x=127 (right?) may cause the cursor to get stuck.","title":"Repositioning and Scaling the Gamerow"},{"location":"guide/examples/stationary-game-icons/","text":"Doge Layout by Such Meme, Many Skill Examples of layouts that show what stationary game icons look like are Doge Layout and Two Row layout . Info If you don't actually want to make the icons stationary, but want to move the gamerow, see Repositioning and Scaling the Gamerow . Firmware \u22658.x \u00b6 Ever since 8.0 came out, stationary game icons have been a bit of a mess to get working properly. This is because 8.0 introduced looped scrolling in the home menu. Another factor was that some behaviour regarding hitboxes was changed. In order to get stationary icons to function properly from this version onwards, the following steps should be followed: RdtBtnIconGame.bflyt \u00b6 Set the x,y scale of RootPane to a custom value. Remember this value and let's call it p . Set the x,y scale of B_Hit to 1.0/p Set the width,height of B_Hit to 256*p . 256 is the default value for width and height, but it might get changed in a future version. RdtBase.bflyt \u00b6 Set the width of N_ScrollWindow to 100000.0 Set the x,y coordinates of N_GameRoot to coordinate where you want your first game icon to be. Set the x scale of N_GameRoot to 0.00001 Set the x coordinate of N_Game to 0.0 (!) Set the x scale of N_Game to 100000.0 Set the x,y coordinate of N_Icon_00 to 0.0 Set the x,y coordinate of N_Icon_[01-11] to the positions you want. If I remember correctly, the scale p has an influence on this. Move icons that you don't want to be shown to (1;9999) . Set the x,y scale of L_BtnFlc to p . Change the y scale of N_ScrollArea and N_ScrollWindow to increase the size of the touch area. You will notice that some icons cannot be tapped if you haven't configured this correctly. Optionally change the y coordinate Warning Even slightly deviating from the values above might cause the cursor not being able to reach the icon, or not being able to tap the icon using the touch screen. However, if you find that these values do not work in your case, the only option would be to mess around with the positions of the panes (not the scale). Firmware <8.x \u00b6 On firmware version 7.x and lower, it is fairly easy to move the game icons around. In order to make them stationary do the following: Change the X,Y scale of RootPane in RdtBtnIconGame.bflyt to your likings Change the X scale of N_Game in RdtBase.bflyt to 100000.0 Reposition the game icons N_Icon_XX in RdtBase.bflyt to your likings Credits to Migush","title":"Stationary Game Icons"},{"location":"guide/examples/stationary-game-icons/#firmware-8x","text":"Ever since 8.0 came out, stationary game icons have been a bit of a mess to get working properly. This is because 8.0 introduced looped scrolling in the home menu. Another factor was that some behaviour regarding hitboxes was changed. In order to get stationary icons to function properly from this version onwards, the following steps should be followed:","title":"Firmware \u22658.x"},{"location":"guide/examples/stationary-game-icons/#rdtbtnicongamebflyt","text":"Set the x,y scale of RootPane to a custom value. Remember this value and let's call it p . Set the x,y scale of B_Hit to 1.0/p Set the width,height of B_Hit to 256*p . 256 is the default value for width and height, but it might get changed in a future version.","title":"RdtBtnIconGame.bflyt"},{"location":"guide/examples/stationary-game-icons/#rdtbasebflyt","text":"Set the width of N_ScrollWindow to 100000.0 Set the x,y coordinates of N_GameRoot to coordinate where you want your first game icon to be. Set the x scale of N_GameRoot to 0.00001 Set the x coordinate of N_Game to 0.0 (!) Set the x scale of N_Game to 100000.0 Set the x,y coordinate of N_Icon_00 to 0.0 Set the x,y coordinate of N_Icon_[01-11] to the positions you want. If I remember correctly, the scale p has an influence on this. Move icons that you don't want to be shown to (1;9999) . Set the x,y scale of L_BtnFlc to p . Change the y scale of N_ScrollArea and N_ScrollWindow to increase the size of the touch area. You will notice that some icons cannot be tapped if you haven't configured this correctly. Optionally change the y coordinate Warning Even slightly deviating from the values above might cause the cursor not being able to reach the icon, or not being able to tap the icon using the touch screen. However, if you find that these values do not work in your case, the only option would be to mess around with the positions of the panes (not the scale).","title":"RdtBase.bflyt"},{"location":"guide/examples/stationary-game-icons/#firmware-8x_1","text":"On firmware version 7.x and lower, it is fairly easy to move the game icons around. In order to make them stationary do the following: Change the X,Y scale of RootPane in RdtBtnIconGame.bflyt to your likings Change the X scale of N_Game in RdtBase.bflyt to 100000.0 Reposition the game icons N_Icon_XX in RdtBase.bflyt to your likings Credits to Migush","title":"Firmware &lt;8.x"},{"location":"guide/layouts/","text":"Back to Filetypes \u00b6 Getting Started \u00b6 Recommend to make a mockup first, so you know at what position you want all elements to be! Starting without one often results in messy layouts! Figuring Out the Coordinates \u00b6 Even though the Switch Toolbox can visualise many things, you'll never be able to see the exact final result. It is recommended to always start with a mockup in your favorite image editor (e.g. Photoshop or Paint.net). Continue to USD Sections \u00b6","title":"Getting Started"},{"location":"guide/layouts/#getting-started","text":"Recommend to make a mockup first, so you know at what position you want all elements to be! Starting without one often results in messy layouts!","title":"Getting Started"},{"location":"guide/layouts/#figuring-out-the-coordinates","text":"Even though the Switch Toolbox can visualise many things, you'll never be able to see the exact final result. It is recommended to always start with a mockup in your favorite image editor (e.g. Photoshop or Paint.net).","title":"Figuring Out the Coordinates"},{"location":"guide/layouts/#continue-to-usd-sections","text":"","title":"Continue to USD Sections "},{"location":"guide/layouts/usd-sections/","text":"Back to Getting Started \u00b6 USD Sections \u00b6 This is a simplified example of a pane followed by a usd section: { \"pic1 - P_Item\" : { \"name\" : \"P_Item\" , \"x translation\" : 100.0 , \"y translation\" : 100.0 , \"width\" : 50.0 , \"height\" : 50.0 , \"material\" : \"P_Item\" }, \"usd1 - P_Item\" : { \"entries\" : [ { \"name\" : \"S_DropShadowDrawMode\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 1 ] }, { \"name\" : \"S_DropShadowColor\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 0.0 , 0.0 , 0.0 , 1.0 ] }, { \"name\" : \"S_DropShadowAngle\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 1.5 ] }, { \"name\" : \"S_DropShadowDistance\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 0.0 ] } ] } } Info The JSON code shown above is from 3DSKit and cannot be directly copied to a layout. Structure \u00b6 A USD entry has a name , Type, unk1 and Data section. Name: String Type: Int 0 : String 1 : Int 2 : Float Unk1: unknown, always 0 Data: Array of values of specified type List of known USD sections \u00b6 These are the USD sections found throughout the home menu. They cannot be applied to every pane. Color-related \u00b6 C_W \u00b6 A property that is used to give elements certain colors. These colors are dynamic and can change based on the system theme. Used almost everywhere (all menus have to support dark and light theme). Type: 1 Data: [X, X, X, X] Often only the first X is different from 0 . Sometimes multiple X s are non-zero, but changing them to 0` seems to have no effect on appearance. Example \u00b6 { \"name\" : \"C_W\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 5 , 0 , 0 , 0 ] } Tested values \u00b6 Value Light theme Dark theme Usage 0 white (255,255,255) (255,255,255) 1 white (255,255,255) (29,32,37) 2 black (0,0,0) (0,0,0) 3 green (114,201,0) (149,231,0) 4 white (255,255,255) (255,255,255) 5 white (235,235,235) (45,45,45) Light/dark theme bg 6 white (255,255,255) (67,67,67) 7 white (255,255,255) (98,99,103) 8 white (255,255,255) (31,32,34) 9 dark grey (45,45,45) (255,255,255) Controller indicator and text color 10 blue (50,80,240) (0,255,201) 11 white (255,255,255) (31,32,34) 12 grey (128,128,128) (160,160,160) 13 white (255,255,255) (45,45,45) 14 white (255,255,255) (45,45,45) 15 white (255,255,255) (70,70,70) 16 green (114,201,0) (149,231,0) 17 green (114,201,0) (200,255,0) 18 blue (50,80,240) (0,255,201) 19 light blue (110,191,225) (0,151,130) 20 white (255,255,255) (45,45,45) 21 grey/blue (129,140,160) (160,180,179) 22 green (114,201,0) (180,255,0) 23 green (140,241,0) (101,170,0) 24 red (240,19,0) (255,40,0) 25 green (0,160,0) (180,255,0) 26 white (255,255,255) (255,255,255) 27 pink (255,40,91) (255,250,0) 28 grey (128,128,128) (200,200,200) 29 neon blue (192,119,193) (25,214,210) Cursor 30 light neon blue (112,255,231) (131,250,255) 31 white (255,255,255) (80,80,80) System Applets circle background 32 magenta (255,0,255) (255,0,255) 33 green/blue (87,255,219) (157,255,251) 34 grey (110,120,121) (220,220,220) 35 blue/grey-ish (129,140,160) (160,180,179) 36 white (235,235,235) (22,22,22) 37 blue (7,163,203) (42,125,193) 38 blue (18,189,207) (2,136,199) Cursor 39 dark blue (15,89,114) (24,51,70) 40 light blue (29,241,255) (0,220,225) 41 light blue (29,241,255) (0,220,255) Blue highlight touch 42 light blue (0,190,200) (24,189,255) Game text 43 blue-ish (0,190,200) (24,189,255) 44 white (240,240,240) (70,70,70) 45 grey (255,255,255) (119,119,119) Player select plate background 46 magenta (255,0,255) (255,0,255) 47 white (255,255,255) (90,90,90) 48 dark blue (16,13,68) (0,0,0) 49 blue (50,80,240) (0,255,201) 50 white (255,255,255) (45,45,45) 51 white (255,255,255) (0,61,140) 52 white (235,235,235) (45,45,45) 53 grey (190,190,190) (190,190,190) 54 white (240,240,240) (70,70,70) 55 green (0,200,0) (180,255,0) 56 green (140,240,28) (101,170,0) 57 green (0,170,0) (180,255,0) 58 dark grey (45,45,45) (255,255,255) Lockscreen home icon 59 white (255,255,255) (45,45,45) 60 grey (200,200,200) (120,120,120) 61 magenta (255,0,255) (255,0,255) 62 dark grey (45,45,45) (83,87,86) Lockscreen three dots when unlocking 63 white (255,255,255) (29,32,37) 64 dark blue (19,29,90) (0,0,0) 65 green/blue (0,91,186) (46,161,205) Cursor 66 blue (90,190,255) (0,255,201) 67 black (35,35,35) (45,45,45) 68 grey (114,114,114) (200,200,200) 69 white (255,255,255) (45,45,45) 70 grey (200,200,200) (170,170,170) 71 grey (45,45,45) (255,255,255) 72 magenta (255,0,255) (0,0,0) 73 white (255,255,255) (45,45,45) 74 grey (128,128,128) (190,190,190) 75 white (255,255,255) (255,255,255) 76 white (255,255,255) (45,45,45) 77 blue (50,80,240) (0,255,201) 78 magenta (255,0,255) (255,0,255) 79 white (255,255,255) (45,45,45) 80 blue (110,191,255) (0,151,130) 81 blue/grey-ish (129,140,160) (160,180,179) 82 bright orange (240,19,0) (255,40,0) 83 white (255,255,255) (56,61,67) 84 white (255,255,255) (255,255,255) 85 grey (201,201,201) (255,255,255) 86 white (255,255,255) (56,61,67) 87 dark blue (19,29,90) (0,0,0) 88 red (255,59,69) (250,89,60) Notification applet 89 soft orange (255,140,65) (255,140,65) 90 orange (255,160,0) (255,176,0) eShop applet 91 grey (45,45,45) (255,255,255) 92 blue (19,115,254) (30,160,255) Album applet 93 blue (0,162,195) (49,231,255) 94 blue (60,160,255) (0,255,201) 95 magenta (255,0,255) (255,0,255) 96 white (255,255,255) (30,19,59) 97 light blue (110,201,255) (99,255,231) 98 (101,116,147) (160,180,197) 99 green (140,241,0) (200,255,0) 100 grey (128,128,128) (80,80,80) 101 orange (255,140,65) (255,140,65) 102 white (255,255,255) (255,255,255) 103 grey (190,190,190) (90,90,90) 104 white (255,255,255) (180,180,180) 105 grey (154,154,154) (140,140,140) 106 grey (45,45,45) (255,255,255) 107 grey (148,148,148) (160,160,160) 108 grey (128,128,128) (190,190,190) 109 pink/orange (255,40,91) (255,250,0) 110 magenta (255,0,255) (255,0,255) 111 magenta (255,0,255) (255,0,255) 112 magenta (255,0,255) (255,0,255) 113 blue (50,80,240) (0,255,201) 114 blue (50,80,240) (0,255,201) 115 light green/blue (79,255,206) (47,239,244) 116 green (114,201,0) (180,255,0) \u2265117 black (0,0,0) black (0,0,0) C_B \u00b6 Functionality unsure Used to give elements certain colors? Doesn't really seem to do much. Seems to be used in e.g. cursor: is set to 37 somewhere. Type: 1 Data: [X, X, X, X] Example \u00b6 { \"name\" : \"C_B\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 0 , 0 , 0 , 0 ] } C_Id \u00b6 Functionality unknown Color doesn't change when C_W is set to another color -> C_Id probably 'overlaps' C_W. System theme color has almost no effect (except for DATA: 0 ('off') and 42 so far). All stuff here was tested on the lockscreen, and does vary per menu. Type: 1 Data: [X] Example \u00b6 { \"name\" : \"C_Id\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 0 ] } Tested values \u00b6 Value Light theme Comments 0 white default - probably 'off' 1 white 2 white 3 white 4 black 5 black 6 black 7 black 8 dark blue (19,29,90) 9 black 10 grey 11 black 12 blue-purpleish (50,80,240) 13 blue-purpleish (50,80,240) 14 white 15 ligher grey Seems to overlap the entrance homebutton icon 16 white 17 white 18 white 19 black 20 white 42 grey dark theme: white C_TI \u00b6 Functionality unknown Type: 1 Data: [X] Example \u00b6 { \"name\" : \"C_Ti\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 0 ] } Tested values \u00b6 Value Comments 0 nothing 1 nothing 10 nothing 99999999999 freezes Border \u00b6 S_RoundRadius \u00b6 Changes the border radius of picture(!) panels. Percentage/pixels? Type: 2 Data: [X] Example \u00b6 { \"name\" : \"S_RoundRadius\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 50.0 ] } S_BorderDrawMode \u00b6 Functionality unknown There are different drawmodes Type: 1 Data: [X] Common value: 1 Example usage: Cursor3 Example \u00b6 { \"name\" : \"S_BorderDrawMode\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 1 ] } S_BorderVolume \u00b6 Color intensity of the border. Type: 2 Data: [X] Example usage: Cursor3 Example \u00b6 { \"name\" : \"S_BorderVolume\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 1.5 ] } S_BorderSize \u00b6 Width of the border in pixels. Type: 2 Data: [X] Example usage: Cursor3 Example \u00b6 { \"name\" : \"S_BorderSize\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 5.0 ] } S_BorderColorSelect0 \u00b6 Functionality unknown Another kind of color. Used in the Cursor and has the same value for C_W somewhere in the cursor. Type: 1 Data: [X] Example usage: Cursor3 Example \u00b6 { \"name\" : \"S_BorderColorSelect0\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 1 ] } S_BorderColor0 \u00b6 Functionality unknown Yet another kind of color. Type: 2 Data: [X, X, X, X] Common value: [1.0, 1.0, 1.0, 1.0] Example usage: Cursor3 Example \u00b6 { \"name\" : \"S_BorderColor0\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 5.0 , 0 , 0 , 0 ] } Drop Shadow \u00b6 S_DropShadowDrawMode \u00b6 Functionality unknown There are different drawmodes. Type: 1 Data: [X] Common value: 1 Example usage: RdtBtnIconGame Example \u00b6 { \"name\" : \"S_DropShadowDrawMode\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 1 ] } S_DropShadowVolume \u00b6 Color density of the shadow. Type: 2 Data: [X] Example usage: RdtBtnIconGame Example \u00b6 { \"name\" : \"S_DropShadowVolume\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 5.0 ] } S_DropShadowColorSelect \u00b6 Functionality unsure Color of the border, same values as C_W? Type: 1 Data: [X] Example usage: RdtBtnIconGame Example \u00b6 { \"name\" : \"S_DropShadowColorSelect\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 1 ] } S_DropShadowColor \u00b6 Color of the drop shadow. Type: 2 Data: [X, X, X, X] Common value: [0.0, 0.0, 0.0, 1.0] (R, G, B, A)? Example usage: RdtBtnIconGame Example \u00b6 { \"name\" : \"S_DropShadowColor\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 0.0 , 0.0 , 0.0 , 1.0 ] } S_DropShadowAngle \u00b6 Shadow direction in radians. Type: 2 Data: [X] Example usage: RdtBtnIconGame Example \u00b6 { \"name\" : \"S_DropShadowAngle\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 1.5 ] } Tested values \u00b6 The first table is probably correct, but the second table is here just in case. Value Direction Comment 0 right 1.57079632679 down GameIcon shadows are down, right? If yes, this is correct. 3.14159265359 left 4.71238898038 up OR Value Direction 0 up 1.57079632679 right 3.14159265359 down 4.71238898038 right S_DropShadowDistance \u00b6 Shadow fade/blur distance in pixels. Type: 2 Data: [X] Example usage: RdtBtnIconGame Example \u00b6 { \"name\" : \"S_DropShadowDistance\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 5.2 ] } S_DropShadowSize \u00b6 Shadow width in pixels. Type: 2 Data: [X] Example usage: RdtBtnIconGame Example \u00b6 { \"name\" : \"S_DropShadowSize\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 10.0 ] } S_DropShadowFunction \u00b6 Functionality unsure How the S_DropShadowDistance is drawn. For example, blur or solid? Type: 1 Data: [X] Common value: 5 and 4 Example usage: RdtBtnIconGame Example \u00b6 { \"name\" : \"S_DropShadowFunction\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 5 ] } S_DropShadowKnockout \u00b6 Functionality unsure Enables/disables shadow fading? Type: 1 Data: [X] Common value: 1 Example usage: RdtBtnIconGame Example \u00b6 { \"name\" : \"S_DropShadowKnockout\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 1 ] } Continue to Animations \u00b6","title":"USD Sections"},{"location":"guide/layouts/usd-sections/#usd-sections","text":"This is a simplified example of a pane followed by a usd section: { \"pic1 - P_Item\" : { \"name\" : \"P_Item\" , \"x translation\" : 100.0 , \"y translation\" : 100.0 , \"width\" : 50.0 , \"height\" : 50.0 , \"material\" : \"P_Item\" }, \"usd1 - P_Item\" : { \"entries\" : [ { \"name\" : \"S_DropShadowDrawMode\" , \"type\" : 1 , \"unk1\" : 0 , \"data\" : [ 1 ] }, { \"name\" : \"S_DropShadowColor\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 0.0 , 0.0 , 0.0 , 1.0 ] }, { \"name\" : \"S_DropShadowAngle\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 1.5 ] }, { \"name\" : \"S_DropShadowDistance\" , \"type\" : 2 , \"unk1\" : 0 , \"data\" : [ 0.0 ] } ] } } Info The JSON code shown above is from 3DSKit and cannot be directly copied to a layout.","title":"USD Sections"},{"location":"guide/layouts/usd-sections/#structure","text":"A USD entry has a name , Type, unk1 and Data section. Name: String Type: Int 0 : String 1 : Int 2 : Float Unk1: unknown, always 0 Data: Array of values of specified type","title":"Structure"},{"location":"guide/layouts/usd-sections/#list-of-known-usd-sections","text":"These are the USD sections found throughout the home menu. They cannot be applied to every pane.","title":"List of known USD sections"},{"location":"guide/layouts/usd-sections/#color-related","text":"","title":"Color-related"},{"location":"guide/layouts/usd-sections/#c_w","text":"A property that is used to give elements certain colors. These colors are dynamic and can change based on the system theme. Used almost everywhere (all menus have to support dark and light theme). Type: 1 Data: [X, X, X, X] Often only the first X is different from 0 . Sometimes multiple X s are non-zero, but changing them to 0` seems to have no effect on appearance.","title":"C_W"},{"location":"guide/layouts/usd-sections/#c_b","text":"Functionality unsure Used to give elements certain colors? Doesn't really seem to do much. Seems to be used in e.g. cursor: is set to 37 somewhere. Type: 1 Data: [X, X, X, X]","title":"C_B"},{"location":"guide/layouts/usd-sections/#c_id","text":"Functionality unknown Color doesn't change when C_W is set to another color -> C_Id probably 'overlaps' C_W. System theme color has almost no effect (except for DATA: 0 ('off') and 42 so far). All stuff here was tested on the lockscreen, and does vary per menu. Type: 1 Data: [X]","title":"C_Id"},{"location":"guide/layouts/usd-sections/#c_ti","text":"Functionality unknown Type: 1 Data: [X]","title":"C_TI"},{"location":"guide/layouts/usd-sections/#border","text":"","title":"Border"},{"location":"guide/layouts/usd-sections/#s_roundradius","text":"Changes the border radius of picture(!) panels. Percentage/pixels? Type: 2 Data: [X]","title":"S_RoundRadius"},{"location":"guide/layouts/usd-sections/#s_borderdrawmode","text":"Functionality unknown There are different drawmodes Type: 1 Data: [X] Common value: 1 Example usage: Cursor3","title":"S_BorderDrawMode"},{"location":"guide/layouts/usd-sections/#s_bordervolume","text":"Color intensity of the border. Type: 2 Data: [X] Example usage: Cursor3","title":"S_BorderVolume"},{"location":"guide/layouts/usd-sections/#s_bordersize","text":"Width of the border in pixels. Type: 2 Data: [X] Example usage: Cursor3","title":"S_BorderSize"},{"location":"guide/layouts/usd-sections/#s_bordercolorselect0","text":"Functionality unknown Another kind of color. Used in the Cursor and has the same value for C_W somewhere in the cursor. Type: 1 Data: [X] Example usage: Cursor3","title":"S_BorderColorSelect0"},{"location":"guide/layouts/usd-sections/#s_bordercolor0","text":"Functionality unknown Yet another kind of color. Type: 2 Data: [X, X, X, X] Common value: [1.0, 1.0, 1.0, 1.0] Example usage: Cursor3","title":"S_BorderColor0"},{"location":"guide/layouts/usd-sections/#drop-shadow","text":"","title":"Drop Shadow"},{"location":"guide/layouts/usd-sections/#s_dropshadowdrawmode","text":"Functionality unknown There are different drawmodes. Type: 1 Data: [X] Common value: 1 Example usage: RdtBtnIconGame","title":"S_DropShadowDrawMode"},{"location":"guide/layouts/usd-sections/#s_dropshadowvolume","text":"Color density of the shadow. Type: 2 Data: [X] Example usage: RdtBtnIconGame","title":"S_DropShadowVolume"},{"location":"guide/layouts/usd-sections/#s_dropshadowcolorselect","text":"Functionality unsure Color of the border, same values as C_W? Type: 1 Data: [X] Example usage: RdtBtnIconGame","title":"S_DropShadowColorSelect"},{"location":"guide/layouts/usd-sections/#s_dropshadowcolor","text":"Color of the drop shadow. Type: 2 Data: [X, X, X, X] Common value: [0.0, 0.0, 0.0, 1.0] (R, G, B, A)? Example usage: RdtBtnIconGame","title":"S_DropShadowColor"},{"location":"guide/layouts/usd-sections/#s_dropshadowangle","text":"Shadow direction in radians. Type: 2 Data: [X] Example usage: RdtBtnIconGame","title":"S_DropShadowAngle"},{"location":"guide/layouts/usd-sections/#s_dropshadowdistance","text":"Shadow fade/blur distance in pixels. Type: 2 Data: [X] Example usage: RdtBtnIconGame","title":"S_DropShadowDistance"},{"location":"guide/layouts/usd-sections/#s_dropshadowsize","text":"Shadow width in pixels. Type: 2 Data: [X] Example usage: RdtBtnIconGame","title":"S_DropShadowSize"},{"location":"guide/layouts/usd-sections/#s_dropshadowfunction","text":"Functionality unsure How the S_DropShadowDistance is drawn. For example, blur or solid? Type: 1 Data: [X] Common value: 5 and 4 Example usage: RdtBtnIconGame","title":"S_DropShadowFunction"},{"location":"guide/layouts/usd-sections/#s_dropshadowknockout","text":"Functionality unsure Enables/disables shadow fading? Type: 1 Data: [X] Common value: 1 Example usage: RdtBtnIconGame","title":"S_DropShadowKnockout"},{"location":"guide/layouts/usd-sections/#continue-to-animations","text":"","title":"Continue to Animations "},{"location":"menu-docs/","text":"In order to get started, it is essential to know where you can find specific parts of the menus. The following pages lists many known components, but there also some yet undocumented. Feel free to contribute to this repository to help complete this list.","title":"Introduction"},{"location":"menu-docs/menus/Flaunch/","text":"File: Flaunch.szs Main bflyt file: FlcCntMain.bflyt Layout Files in Flaunch.szs \u00b6 Info These aren't all files, because either the function is unknown or the component is unimportant. Filename Hypothetical full name Function BaseBg.bflyt BaseBackground Contains a loading indicator for when the list is still loading BgNml.bflyt BackgroundNormal Contains menu background pane + ' exelixbg ' Cursor3.bflyt Cursor3 Cursor FlcBalloon.bflyt FullLauncherBalloon App name balloon FlcBtnIconGame.bflyt FullLauncherButtonIconGame The game icon layout. Used for all icons FlcBtnIconGameBlock.bflyt FullLauncherButtonIconGameBlock A row with six of the FlcBtnIconGame s LineHeader_Root.bflyt LineHeader Root The horizontal line that is shown in the header TextH1.bflyt TextHeader1 The complete header component","title":"All Apps"},{"location":"menu-docs/menus/Flaunch/#layout-files-in-flaunchszs","text":"Info These aren't all files, because either the function is unknown or the component is unimportant. Filename Hypothetical full name Function BaseBg.bflyt BaseBackground Contains a loading indicator for when the list is still loading BgNml.bflyt BackgroundNormal Contains menu background pane + ' exelixbg ' Cursor3.bflyt Cursor3 Cursor FlcBalloon.bflyt FullLauncherBalloon App name balloon FlcBtnIconGame.bflyt FullLauncherButtonIconGame The game icon layout. Used for all icons FlcBtnIconGameBlock.bflyt FullLauncherButtonIconGameBlock A row with six of the FlcBtnIconGame s LineHeader_Root.bflyt LineHeader Root The horizontal line that is shown in the header TextH1.bflyt TextHeader1 The complete header component","title":"Layout Files in Flaunch.szs"},{"location":"menu-docs/menus/ResidentMenu/","text":"File: ResidentMenu.szs Main bflyt file: RdtBase.bflyt Layout Files in ResidentMenu.szs \u00b6 Info These aren't all files, because either the function is unknown or the component is unimportant. Filename Hypothetical full name Function BatteryConsole.bflyt BatteryConsole Battery (Icon) BgNml.bflyt BackgroundNormal Contains menu background pane + ' exelixbg ' Cursor3.bflyt Cursor3 Cursor GTNumL.bflyt GeneralTimeNumberLarge Time (Numbers) GTNumM.bflyt GeneralTimeNumberMedium Time (Numbers) Hud.bflyt Hud Wrapper for all other hud components HudBatteryNum.bflyt HudBatteryNumber Battery (Percent) HudSignal.bflyt HudSignal Network connnection indicator HudTime.bflyt HudTime Time (AM, PM, Colon) RdtBalloon.bflyt ResidentMenuBalloon App name balloon RdtBalloonCtrl.bflyt ResidentMenuBalloonController Controller (dis)connect notification popup RdtBalloonSystemApplet.bflyt ResidentMenuBalloonSystemApplet Applet name balloon RdtBase.bflyt ResidentMenuBase The main wrapper RdtBtnChildLock.bflyt ResidentMenuButtonChildLock Child lock button RdtBtnCtrl.bflyt ResidentMenuButtonController Controller applet button RdtBtnFullLauncher.bflyt ResidentMenuButtonFullLauncher Open Full Launcher (All Apps menu) RdtBtnIconGame.bflyt ResidentMenuButtonIconGame The game icon layout. Used for all 12 icons RdtBtnMyPage.bflyt ResidentMenuButtonMyPage User account button RdtBtnNtf.bflyt ResidentMenuButtonNotification News applet button RdtBtnPow.bflyt ResidentMenuButtonPower Power applet button RdtBtnPvr.bflyt ResidentMenuButtonPictureviewer Album applet button RdtBtnSet.bflyt ResidentMenuButtonSettings Settings applet button RdtBtnShop.bflyt ResidentMenuButtonShop eShop applet button RdtIconPromotion.bflyt ResidentMenuIconPromotion","title":"Home Menu"},{"location":"menu-docs/menus/ResidentMenu/#layout-files-in-residentmenuszs","text":"Info These aren't all files, because either the function is unknown or the component is unimportant. Filename Hypothetical full name Function BatteryConsole.bflyt BatteryConsole Battery (Icon) BgNml.bflyt BackgroundNormal Contains menu background pane + ' exelixbg ' Cursor3.bflyt Cursor3 Cursor GTNumL.bflyt GeneralTimeNumberLarge Time (Numbers) GTNumM.bflyt GeneralTimeNumberMedium Time (Numbers) Hud.bflyt Hud Wrapper for all other hud components HudBatteryNum.bflyt HudBatteryNumber Battery (Percent) HudSignal.bflyt HudSignal Network connnection indicator HudTime.bflyt HudTime Time (AM, PM, Colon) RdtBalloon.bflyt ResidentMenuBalloon App name balloon RdtBalloonCtrl.bflyt ResidentMenuBalloonController Controller (dis)connect notification popup RdtBalloonSystemApplet.bflyt ResidentMenuBalloonSystemApplet Applet name balloon RdtBase.bflyt ResidentMenuBase The main wrapper RdtBtnChildLock.bflyt ResidentMenuButtonChildLock Child lock button RdtBtnCtrl.bflyt ResidentMenuButtonController Controller applet button RdtBtnFullLauncher.bflyt ResidentMenuButtonFullLauncher Open Full Launcher (All Apps menu) RdtBtnIconGame.bflyt ResidentMenuButtonIconGame The game icon layout. Used for all 12 icons RdtBtnMyPage.bflyt ResidentMenuButtonMyPage User account button RdtBtnNtf.bflyt ResidentMenuButtonNotification News applet button RdtBtnPow.bflyt ResidentMenuButtonPower Power applet button RdtBtnPvr.bflyt ResidentMenuButtonPictureviewer Album applet button RdtBtnSet.bflyt ResidentMenuButtonSettings Settings applet button RdtBtnShop.bflyt ResidentMenuButtonShop eShop applet button RdtIconPromotion.bflyt ResidentMenuIconPromotion","title":"Layout Files in ResidentMenu.szs"},{"location":"menu-docs/menus/ResidentMenu/RdtBalloon.bflyt/","text":"Tree \u00b6 N_Root N_Trans N_Size N_Scissor N_Offset P_Reset N_Scroll : contains all scrolling pars in the balloon (so only the text really) T_Main : the icon's name N_Margin T_Sub N_Card P_Card : the card icon","title":"RdtBalloon.bflyt"},{"location":"menu-docs/menus/ResidentMenu/RdtBalloon.bflyt/#tree","text":"N_Root N_Trans N_Size N_Scissor N_Offset P_Reset N_Scroll : contains all scrolling pars in the balloon (so only the text really) T_Main : the icon's name N_Margin T_Sub N_Card P_Card : the card icon","title":"Tree"},{"location":"menu-docs/menus/ResidentMenu/RdtBase.bflyt/","text":"Tree \u00b6 RdtBase.bflyt L_BgNml : contains the original light/dark background, but the 'exelixbg' panel as well after being patched with a custom background N_Root N_GameRoot : contains all items that will be scrolled N_Icon[00-11] : all 12 game icons. They make use of the same layout N_Icon_12 L_BtnFlc : the 13th icon in the gameroot: the 'all apps' button` N_System : contains all six system applets L_BtnNoti : the notifications button L_BtnShop : the eshop button L_BtnCtrl : the album button L_BtnPvr : the controllers button L_BtnSet : the settings button L_BtnPow : the power button L_ChildLock : the childlock button N_Balloon N_MyPage L_BtnAccount_[00-07] :`all usericons which make use of a single layout L_Hud : the hud (clock, network, battery) L_BalloonCtrl : the balloon that pops up when (dis)connecting a controller","title":"RdtBase.bflyt"},{"location":"menu-docs/menus/ResidentMenu/RdtBase.bflyt/#tree","text":"RdtBase.bflyt L_BgNml : contains the original light/dark background, but the 'exelixbg' panel as well after being patched with a custom background N_Root N_GameRoot : contains all items that will be scrolled N_Icon[00-11] : all 12 game icons. They make use of the same layout N_Icon_12 L_BtnFlc : the 13th icon in the gameroot: the 'all apps' button` N_System : contains all six system applets L_BtnNoti : the notifications button L_BtnShop : the eshop button L_BtnCtrl : the album button L_BtnPvr : the controllers button L_BtnSet : the settings button L_BtnPow : the power button L_ChildLock : the childlock button N_Balloon N_MyPage L_BtnAccount_[00-07] :`all usericons which make use of a single layout L_Hud : the hud (clock, network, battery) L_BalloonCtrl : the balloon that pops up when (dis)connecting a controller","title":"Tree"},{"location":"menu-docs/menus/ResidentMenu/RdtBtnIconGame.bflyt/","text":"Tree \u00b6 N_Root N_Delete N_DecideKey N_DecideTouch P_BtnBase : the white background hidden behind a game icon. Can shortly be seen after boot. P_IconGame : the game's icon P_Blank L_Loading : the loading icon displayed on top of P_BtnBase` N_Suspend N_SuspendPos N_TextPos P_Suspend_00 : the white oval background behind the text T_Suspend : the 'Playing' text when a game is opened P_account_[03-00] : the usericon displayed on the left of the 'Playing' indicator N_DL: loading bars you don't have to care about P_BtnDecideKey : the blue overlay which can be seen when a game is launched via the controller P_BtnTouch : the blue overlay which can be seen when tapping/holding the game icon P_InnerCursor : the white ring displayed between the blue cursor and the game icon N_BtnFocusKey UF_Cursor : the blue cursor displayed around the game icon P_EffectDecide : the effect when a game is launched, a second game icon can be seen dissolving N_Promotion L_Promotion : the not-yet-in-use 'test' or 'try' function for games N_Tip RdtBalloon.bflyt : the game's name/text in blue B_Hit : hitbox of all the items in N_DecideKey","title":"RdtBtnIconGame.bflyt"},{"location":"menu-docs/menus/ResidentMenu/RdtBtnIconGame.bflyt/#tree","text":"N_Root N_Delete N_DecideKey N_DecideTouch P_BtnBase : the white background hidden behind a game icon. Can shortly be seen after boot. P_IconGame : the game's icon P_Blank L_Loading : the loading icon displayed on top of P_BtnBase` N_Suspend N_SuspendPos N_TextPos P_Suspend_00 : the white oval background behind the text T_Suspend : the 'Playing' text when a game is opened P_account_[03-00] : the usericon displayed on the left of the 'Playing' indicator N_DL: loading bars you don't have to care about P_BtnDecideKey : the blue overlay which can be seen when a game is launched via the controller P_BtnTouch : the blue overlay which can be seen when tapping/holding the game icon P_InnerCursor : the white ring displayed between the blue cursor and the game icon N_BtnFocusKey UF_Cursor : the blue cursor displayed around the game icon P_EffectDecide : the effect when a game is launched, a second game icon can be seen dissolving N_Promotion L_Promotion : the not-yet-in-use 'test' or 'try' function for games N_Tip RdtBalloon.bflyt : the game's name/text in blue B_Hit : hitbox of all the items in N_DecideKey","title":"Tree"},{"location":"menu-docs/menus/common/","text":"File: common.szs Layout Files in Flaunch.szs \u00b6 Info These aren't all files, because either the function is unknown or the component is unimportant. Filename Hypothetical full name Function Cursor3.bflyt Cursor3 Cursor Footer.bflyt Footer An empty footer component FooterAll.bflyt FooterAll The actual footer component. Contains all other footer components FooterBtn.bflyt LineFooter Start (A), Options (+), etc. FooterCtrl.bflyt LineFooter Controller/Switch Icon LineFooter.bflyt LineFooter The actual footer line","title":"common"},{"location":"menu-docs/menus/common/#layout-files-in-flaunchszs","text":"Info These aren't all files, because either the function is unknown or the component is unimportant. Filename Hypothetical full name Function Cursor3.bflyt Cursor3 Cursor Footer.bflyt Footer An empty footer component FooterAll.bflyt FooterAll The actual footer component. Contains all other footer components FooterBtn.bflyt LineFooter Start (A), Options (+), etc. FooterCtrl.bflyt LineFooter Controller/Switch Icon LineFooter.bflyt LineFooter The actual footer line","title":"Layout Files in Flaunch.szs"},{"location":"menu-docs/menus/common/FooterAll.bflyt/","text":"","title":"Index"},{"location":"menu-docs/menus/common/LineFooter.bflyt/","text":"","title":"Index"}]}